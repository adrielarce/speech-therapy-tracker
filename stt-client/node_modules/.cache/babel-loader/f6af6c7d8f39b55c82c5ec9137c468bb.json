{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/adrielarce/Documents/Projects/speech-therapy-tracker/stt-client/src/components/NavBar.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { connect } from \"react-redux\";\nimport { loggedOut } from \"../redux/actions/authActions\";\nimport { Auth } from \"aws-amplify\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport styled from 'styled-components';\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport Typography from \"@material-ui/core/Typography\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nconst Container = styled.div.attrs({\n  className: 'container'\n})``;\n_c = Container;\nconst drawerWidth = 240;\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: \"flex\"\n  },\n  grow: {\n    flexGrow: \"1\"\n  },\n  drawer: {\n    [theme.breakpoints.up(\"sm\")]: {\n      width: drawerWidth,\n      flexShrink: 0\n    }\n  },\n  appBar: {\n    [theme.breakpoints.up(\"sm\")]: {\n      width: `calc(100% - ${drawerWidth}px)`,\n      marginLeft: drawerWidth\n    }\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n    [theme.breakpoints.up(\"sm\")]: {\n      display: \"none\"\n    }\n  },\n  // necessary for content to be below app bar\n  toolbar: theme.mixins.toolbar,\n  drawerPaper: {\n    width: drawerWidth\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3)\n  }\n}));\n\nfunction NavBar(props) {\n  _s();\n\n  const classes = useStyles();\n  const history = useHistory();\n  console.log(props);\n\n  const handleDrawerToggle = () => {\n    props.setMobileOpen(!props.mobileOpen);\n  };\n\n  async function handleLogout() {\n    await Auth.signOut(); //userHasAuthenticated(false);\n\n    props.loggedOut(); //remove clients & currentClient from store\n    //redirect\n\n    history.push(\"/login\");\n  }\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(AppBar, {\n      position: \"fixed\",\n      className: classes.appBar,\n      children: /*#__PURE__*/_jsxDEV(Toolbar, {\n        children: [/*#__PURE__*/_jsxDEV(IconButton, {\n          color: \"inherit\",\n          \"aria-label\": \"open drawer\",\n          edge: \"start\",\n          onClick: handleDrawerToggle,\n          className: classes.menuButton,\n          children: /*#__PURE__*/_jsxDEV(MenuIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          noWrap: true,\n          className: classes.grow,\n          children: \"Speech Therapy Tracker\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this), props.isAuthenticated ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/settings\",\n              children: /*#__PURE__*/_jsxDEV(ListItemText, {\n                primary: \"Settings\",\n                className: classes.grow\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              onClick: handleLogout,\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"button\",\n                noWrap: true,\n                className: classes.grow,\n                color: \"secondary\",\n                children: \"Logout\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/signup\",\n              children: /*#__PURE__*/_jsxDEV(ListItemText, {\n                primary: \"Signup\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/login\",\n              children: /*#__PURE__*/_jsxDEV(ListItemText, {\n                primary: \"Login\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 118,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 9\n  }, this);\n}\n\n_s(NavBar, \"cXZz/rbrhPrjL6gJaTc75NCtuak=\", false, function () {\n  return [useStyles, useHistory];\n});\n\n_c2 = NavBar;\n\nconst mapStateToProps = state => ({\n  isAuthenticated: state.auth.isAuthenticated\n});\n\nconst mapDispatchToProps = dispatch => ({\n  loggedOut: () => dispatch(loggedOut())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NavBar);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"NavBar\");","map":{"version":3,"sources":["/Users/adrielarce/Documents/Projects/speech-therapy-tracker/stt-client/src/components/NavBar.jsx"],"names":["React","useState","connect","loggedOut","Auth","Link","useHistory","styled","AppBar","Toolbar","IconButton","MenuIcon","Typography","ListItemText","makeStyles","Container","div","attrs","className","drawerWidth","useStyles","theme","root","display","grow","flexGrow","drawer","breakpoints","up","width","flexShrink","appBar","marginLeft","menuButton","marginRight","spacing","toolbar","mixins","drawerPaper","content","padding","NavBar","props","classes","history","console","log","handleDrawerToggle","setMobileOpen","mobileOpen","handleLogout","signOut","push","isAuthenticated","mapStateToProps","state","auth","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { connect } from \"react-redux\";\nimport { loggedOut } from \"../redux/actions/authActions\";\nimport { Auth } from \"aws-amplify\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport styled from 'styled-components';\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport Typography from \"@material-ui/core/Typography\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\n\nconst Container = styled.div.attrs({\n    className: 'container',\n})``\n\nconst drawerWidth = 240;\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: \"flex\",\n    },\n    grow: {\n        flexGrow: \"1\",\n    },\n    drawer: {\n        [theme.breakpoints.up(\"sm\")]: {\n            width: drawerWidth,\n            flexShrink: 0,\n        },\n    },\n    appBar: {\n        [theme.breakpoints.up(\"sm\")]: {\n            width: `calc(100% - ${drawerWidth}px)`,\n            marginLeft: drawerWidth,\n        },\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n        [theme.breakpoints.up(\"sm\")]: {\n            display: \"none\",\n        },\n    },\n    // necessary for content to be below app bar\n    toolbar: theme.mixins.toolbar,\n    drawerPaper: {\n        width: drawerWidth,\n    },\n    content: {\n        flexGrow: 1,\n        padding: theme.spacing(3),\n    },\n}));\n\nfunction NavBar(props) {\n    const classes = useStyles();\n    const history = useHistory();\n    console.log(props);\n    const handleDrawerToggle = () => {\n        props.setMobileOpen(!props.mobileOpen);\n    };\n    async function handleLogout() {\n        await Auth.signOut();\n        //userHasAuthenticated(false);\n        props.loggedOut();\n        //remove clients & currentClient from store\n\n        //redirect\n        history.push(\"/login\");\n    }\n    return (\n        <Container>\n            <AppBar position=\"fixed\" className={classes.appBar}>\n                <Toolbar>\n                    <IconButton\n                        color=\"inherit\"\n                        aria-label=\"open drawer\"\n                        edge=\"start\"\n                        onClick={handleDrawerToggle}\n                        className={classes.menuButton}\n                    >\n                        <MenuIcon />\n                    </IconButton>\n                    <Typography variant=\"h6\" noWrap className={classes.grow}>\n                        Speech Therapy Tracker\n                        </Typography>\n                    {props.isAuthenticated ? (\n                        <>\n                            <div>\n                                <Link to=\"/settings\">\n                                    <ListItemText primary={\"Settings\"} className={classes.grow} />\n                                </Link>\n                            </div>\n                            <div>\n                                <Link onClick={handleLogout}>\n                                    <Typography\n                                        variant=\"button\"\n                                        noWrap\n                                        className={classes.grow}\n                                        color=\"secondary\"\n                                    >\n                                        Logout\n                                    </Typography>\n                                </Link>\n                            </div>\n                        </>\n                    ) : (\n                            <>\n                                <div>\n                                    <Link to=\"/signup\">\n                                        <ListItemText primary={\"Signup\"} />\n                                    </Link>\n                                </div>\n                                <div>\n                                    <Link to=\"/login\">\n                                        <ListItemText primary={\"Login\"} />\n                                    </Link>\n                                </div>\n                            </>\n                        )}\n                </Toolbar>\n            </AppBar>\n        </Container>\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    isAuthenticated: state.auth.isAuthenticated,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n    loggedOut: () => dispatch(loggedOut()),\n});\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NavBar);"]},"metadata":{},"sourceType":"module"}