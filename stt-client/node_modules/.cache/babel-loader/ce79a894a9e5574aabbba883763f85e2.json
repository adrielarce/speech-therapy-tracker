{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/adrielarce/Documents/Projects/speech-therapy-tracker/stt-client/src/pages/programs/ViewProgram.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useReducer } from 'react';\nimport { useAppContext } from \"../../libs/contextLib\";\nimport { onError } from \"../../libs/errorLib\";\nimport { listPrograms } from '../../api';\nimport { Link } from 'react-router-dom';\nimport ViewGoals from './ViewGoals';\nimport styled from 'styled-components';\nconst Wrapper = styled.div`\n    padding: 0 40px 40px 40px;\n`;\nconst Update = styled.div`\n    color: #ef9b0f;\n    cursor: pointer;\n`;\nconst Delete = styled.div`\n    color: #ff0000;\n    cursor: pointer;\n`;\n/*\nclass UpdateGoal extends Component {\n    updateUser = event => {\n        event.preventDefault()\n        window.location.href = `/program/update/${this.props.id}`\n    }\n    render() {\n        const updateLink = `/program/update/${this.props.id}`;\n        return (\n            <Link to={updateLink}>\n                Update\n            </Link>\n        )\n    }\n}\nclass DeleteGoal extends Component {\n    deleteUser = event => {\n        event.preventDefault()\n\n        if (\n            window.confirm(\n                `Do you want to delete the goal ${this.props.name} permanently?`,\n            )\n        ) {\n            api.deleteGoalById(this.props.id)\n            window.location.reload()\n        }\n    }\n\n    render() {\n        return <Delete onClick={this.deleteUser}>Delete</Delete>\n    }\n}\n*/\n\nfunction ViewProgram() {\n  _s();\n\n  const {\n    currentClient\n  } = useAppContext();\n  const [latestProgram, setLatestProgram] = useState(null);\n  const initialPrograms = {\n    list: [],\n    latest: null\n  };\n  useEffect(() => {\n    console.log(currentClient);\n    loadPrograms();\n  }, [currentClient]);\n\n  const programsReducer = (state, action) => {\n    return { ...state,\n      list: action,\n      latest: action[0]\n    };\n  };\n\n  const [programs, dispatch] = useReducer(programsReducer, initialPrograms);\n\n  async function loadPrograms() {\n    if (currentClient) {\n      try {\n        await listPrograms(currentClient).then(data => {\n          dispatch(data);\n        }).then(() => {\n          if (programs.length > 0) {//setLatestProgram(programs[0]);\n          } else {\n            setLatestProgram(null);\n          }\n        });\n      } catch (e) {\n        onError(e);\n      }\n    } else {\n      dispatch([]);\n      setLatestProgram(null);\n    }\n  }\n  /*componentDidMount = async () => {\n  \n  }*/\n\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: \"/program/create\",\n      children: \"Add Program\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }, this), currentClient ? /*#__PURE__*/_jsxDEV(ViewGoals, {\n      program: programs.latest\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 33\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ViewProgram, \"mwp1CE6iS1EeM00chTDzwS4MoWw=\", false, function () {\n  return [useAppContext];\n});\n\n_c = ViewProgram;\nexport default ViewProgram;\n\nvar _c;\n\n$RefreshReg$(_c, \"ViewProgram\");","map":{"version":3,"sources":["/Users/adrielarce/Documents/Projects/speech-therapy-tracker/stt-client/src/pages/programs/ViewProgram.jsx"],"names":["React","useState","useEffect","useReducer","useAppContext","onError","listPrograms","Link","ViewGoals","styled","Wrapper","div","Update","Delete","ViewProgram","currentClient","latestProgram","setLatestProgram","initialPrograms","list","latest","console","log","loadPrograms","programsReducer","state","action","programs","dispatch","then","data","length","e"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,UAArC,QAAuD,OAAvD;AACA,SAASC,aAAT,QAA8B,uBAA9B;AACA,SAASC,OAAT,QAAwB,qBAAxB;AACA,SAASC,YAAT,QAA6B,WAA7B;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AAEA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,MAAMC,OAAO,GAAGD,MAAM,CAACE,GAAI;AAC3B;AACA,CAFA;AAIA,MAAMC,MAAM,GAAGH,MAAM,CAACE,GAAI;AAC1B;AACA;AACA,CAHA;AAKA,MAAME,MAAM,GAAGJ,MAAM,CAACE,GAAI;AAC1B;AACA;AACA,CAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASG,WAAT,GAAuB;AAAA;;AACnB,QAAM;AAAEC,IAAAA;AAAF,MAAoBX,aAAa,EAAvC;AACA,QAAM,CAACY,aAAD,EAAgBC,gBAAhB,IAAoChB,QAAQ,CAAC,IAAD,CAAlD;AAEA,QAAMiB,eAAe,GAAG;AAAEC,IAAAA,IAAI,EAAE,EAAR;AAAYC,IAAAA,MAAM,EAAE;AAApB,GAAxB;AAEAlB,EAAAA,SAAS,CAAC,MAAM;AACZmB,IAAAA,OAAO,CAACC,GAAR,CAAYP,aAAZ;AACAQ,IAAAA,YAAY;AACf,GAHQ,EAGN,CAACR,aAAD,CAHM,CAAT;;AAKA,QAAMS,eAAe,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACvC,WAAO,EAAE,GAAGD,KAAL;AAAYN,MAAAA,IAAI,EAAEO,MAAlB;AAA0BN,MAAAA,MAAM,EAAEM,MAAM,CAAC,CAAD;AAAxC,KAAP;AACH,GAFD;;AAGA,QAAM,CAACC,QAAD,EAAWC,QAAX,IAAuBzB,UAAU,CAACqB,eAAD,EAAkBN,eAAlB,CAAvC;;AAEA,iBAAeK,YAAf,GAA8B;AAC1B,QAAIR,aAAJ,EAAmB;AACf,UAAI;AACA,cAAMT,YAAY,CAACS,aAAD,CAAZ,CAA4Bc,IAA5B,CAAkCC,IAAD,IAAU;AAC7CF,UAAAA,QAAQ,CAACE,IAAD,CAAR;AACH,SAFK,EAEHD,IAFG,CAEE,MAAM;AACV,cAAIF,QAAQ,CAACI,MAAT,GAAkB,CAAtB,EAAyB,CACrB;AACH,WAFD,MAGK;AACDd,YAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACH;AACJ,SATK,CAAN;AAUH,OAXD,CAYA,OAAOe,CAAP,EAAU;AACN3B,QAAAA,OAAO,CAAC2B,CAAD,CAAP;AAEH;AACJ,KAjBD,MAkBK;AACDJ,MAAAA,QAAQ,CAAC,EAAD,CAAR;AACAX,MAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACH;AACJ;AAED;AACJ;AACA;;;AACI,sBACI,QAAC,KAAD,CAAO,QAAP;AAAA,4BACI,QAAC,IAAD;AAAM,MAAA,EAAE,EAAC,iBAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAII;AAAA;AAAA;AAAA;AAAA,YAJJ,EAKMF,aAAD,gBAAmB,QAAC,SAAD;AAAW,MAAA,OAAO,EAAEY,QAAQ,CAACP;AAA7B;AAAA;AAAA;AAAA;AAAA,YAAnB,GAA8D,IALnE;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AASH;;GArDQN,W;UACqBV,a;;;KADrBU,W;AAuDT,eAAeA,WAAf","sourcesContent":["import React, { useState, useEffect, useReducer } from 'react';\nimport { useAppContext } from \"../../libs/contextLib\";\nimport { onError } from \"../../libs/errorLib\";\nimport { listPrograms } from '../../api';\nimport { Link } from 'react-router-dom';\nimport ViewGoals from './ViewGoals';\n\nimport styled from 'styled-components'\n\nconst Wrapper = styled.div`\n    padding: 0 40px 40px 40px;\n`\n\nconst Update = styled.div`\n    color: #ef9b0f;\n    cursor: pointer;\n`\n\nconst Delete = styled.div`\n    color: #ff0000;\n    cursor: pointer;\n`\n\n/*\nclass UpdateGoal extends Component {\n    updateUser = event => {\n        event.preventDefault()\n        window.location.href = `/program/update/${this.props.id}`\n    }\n    render() {\n        const updateLink = `/program/update/${this.props.id}`;\n        return (\n            <Link to={updateLink}>\n                Update\n            </Link>\n        )\n    }\n}\nclass DeleteGoal extends Component {\n    deleteUser = event => {\n        event.preventDefault()\n\n        if (\n            window.confirm(\n                `Do you want to delete the goal ${this.props.name} permanently?`,\n            )\n        ) {\n            api.deleteGoalById(this.props.id)\n            window.location.reload()\n        }\n    }\n\n    render() {\n        return <Delete onClick={this.deleteUser}>Delete</Delete>\n    }\n}\n*/\nfunction ViewProgram() {\n    const { currentClient } = useAppContext();\n    const [latestProgram, setLatestProgram] = useState(null);\n\n    const initialPrograms = { list: [], latest: null };\n\n    useEffect(() => {\n        console.log(currentClient);\n        loadPrograms();\n    }, [currentClient]);\n\n    const programsReducer = (state, action) => {\n        return { ...state, list: action, latest: action[0] };\n    };\n    const [programs, dispatch] = useReducer(programsReducer, initialPrograms);\n\n    async function loadPrograms() {\n        if (currentClient) {\n            try {\n                await listPrograms(currentClient).then((data) => {\n                    dispatch(data);\n                }).then(() => {\n                    if (programs.length > 0) {\n                        //setLatestProgram(programs[0]);\n                    }\n                    else {\n                        setLatestProgram(null);\n                    }\n                });\n            }\n            catch (e) {\n                onError(e);\n\n            }\n        }\n        else {\n            dispatch([]);\n            setLatestProgram(null);\n        }\n    }\n\n    /*componentDidMount = async () => {\n    \n    }*/\n    return (\n        <React.Fragment>\n            <Link to=\"/program/create\">\n                Add Program\n            </Link>\n            <br />\n            {(currentClient) ? (<ViewGoals program={programs.latest} />) : null}\n        </React.Fragment>\n    )\n}\n\nexport default ViewProgram"]},"metadata":{},"sourceType":"module"}