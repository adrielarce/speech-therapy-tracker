{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/adrielarce/Documents/Projects/speech-therapy-tracker/stt-client/src/app/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { storeAllClients } from \"../redux/actions/clientActions\";\nimport { loggedIn } from \"../redux/actions/authActions\";\nimport Routes from \"../routes/Routes\";\nimport { AppContext } from \"../libs/contextLib\";\nimport { Auth } from \"aws-amplify\"; //import { useHistory } from \"react-router-dom\";\n\nimport { onError } from \"../libs/errorLib\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport { listClients } from \"../api\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport NavBar from \"../components/NavBar\";\nimport SideBar from \"../components/SideBar\";\nconst drawerWidth = 240;\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: \"flex\"\n  },\n  grow: {\n    flexGrow: \"1\"\n  },\n  drawer: {\n    [theme.breakpoints.up(\"sm\")]: {\n      width: drawerWidth,\n      flexShrink: 0\n    }\n  },\n  appBar: {\n    [theme.breakpoints.up(\"sm\")]: {\n      width: `calc(100% - ${drawerWidth}px)`,\n      marginLeft: drawerWidth\n    }\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n    [theme.breakpoints.up(\"sm\")]: {\n      display: \"none\"\n    }\n  },\n  // necessary for content to be below app bar\n  toolbar: theme.mixins.toolbar,\n  drawerPaper: {\n    width: drawerWidth\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3)\n  }\n}));\n\nfunction App(props) {\n  _s();\n\n  const {\n    window\n  } = props; //const theme = useTheme();\n\n  const classes = useStyles(); //const history = useHistory();\n  //const [isAuthenticating, setIsAuthenticating] = useState(true);\n\n  const [isAuthenticated, userHasAuthenticated] = useState(false);\n  const [mobileOpen, setMobileOpen] = React.useState(false);\n  console.log(props);\n  useEffect(() => {\n    onLoad();\n  }, []);\n\n  async function onLoad() {\n    try {\n      await Auth.currentSession();\n      props.loggedIn();\n      userHasAuthenticated(true);\n    } catch (e) {\n      if (e !== \"No current user\") {\n        onError(e);\n      }\n    } //if (props.auth.isAuthenticated) {\n\n\n    console.log(\"authenticated\");\n\n    try {\n      await listClients().then(res => {\n        console.log(res);\n        console.log(props.storeAllClients(res));\n      });\n    } catch (e) {\n      console.log(e);\n    } //}\n    //setIsAuthenticating(false);\n\n  }\n  /*\n  async function handleLogout() {\n    await Auth.signOut();\n    userHasAuthenticated(false);\n    history.push(\"/login\");\n  }\n  */\n\n\n  const handleDrawerToggle = () => {\n    setMobileOpen(!mobileOpen);\n  };\n\n  const container = window !== undefined ? () => window().document.body : undefined;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NavBar, {\n      mobileOpen: mobileOpen,\n      setMobileOpen: setMobileOpen\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SideBar, {\n      isAuthenticated: isAuthenticated,\n      mobileOpen: mobileOpen,\n      setMobileOpen: setMobileOpen\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(AppContext.Provider, {\n        value: {\n          isAuthenticated,\n          userHasAuthenticated\n        },\n        children: /*#__PURE__*/_jsxDEV(\"main\", {\n          className: classes.content,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.toolbar\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Routes, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this)\n    }, void 0, false)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"YBVbBowBNP7hufNRfEuerg4Q/LY=\", false, function () {\n  return [useStyles];\n});\n\n_c = App;\n\nconst mapStateToProps = state => ({\n  clients: state.clients,\n  auth: state.auth\n});\n\nconst mapDispatchToProps = dispatch => ({\n  storeAllClients: payload => dispatch(storeAllClients(payload)),\n  loggedIn: () => dispatch(loggedIn())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/adrielarce/Documents/Projects/speech-therapy-tracker/stt-client/src/app/index.js"],"names":["React","useState","useEffect","connect","storeAllClients","loggedIn","Routes","AppContext","Auth","onError","makeStyles","useTheme","CssBaseline","listClients","NavBar","SideBar","drawerWidth","useStyles","theme","root","display","grow","flexGrow","drawer","breakpoints","up","width","flexShrink","appBar","marginLeft","menuButton","marginRight","spacing","toolbar","mixins","drawerPaper","content","padding","App","props","window","classes","isAuthenticated","userHasAuthenticated","mobileOpen","setMobileOpen","console","log","onLoad","currentSession","e","then","res","handleDrawerToggle","container","undefined","document","body","mapStateToProps","state","clients","auth","mapDispatchToProps","dispatch","payload"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { storeAllClients } from \"../redux/actions/clientActions\";\nimport { loggedIn } from \"../redux/actions/authActions\";\nimport Routes from \"../routes/Routes\";\nimport { AppContext } from \"../libs/contextLib\";\nimport { Auth } from \"aws-amplify\";\n//import { useHistory } from \"react-router-dom\";\nimport { onError } from \"../libs/errorLib\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport { listClients } from \"../api\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nimport NavBar from \"../components/NavBar\";\nimport SideBar from \"../components/SideBar\";\n\nconst drawerWidth = 240;\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n  },\n  grow: {\n    flexGrow: \"1\",\n  },\n  drawer: {\n    [theme.breakpoints.up(\"sm\")]: {\n      width: drawerWidth,\n      flexShrink: 0,\n    },\n  },\n  appBar: {\n    [theme.breakpoints.up(\"sm\")]: {\n      width: `calc(100% - ${drawerWidth}px)`,\n      marginLeft: drawerWidth,\n    },\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n    [theme.breakpoints.up(\"sm\")]: {\n      display: \"none\",\n    },\n  },\n  // necessary for content to be below app bar\n  toolbar: theme.mixins.toolbar,\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n  },\n}));\n\nfunction App(props) {\n  const { window } = props;\n  //const theme = useTheme();\n  const classes = useStyles();\n  //const history = useHistory();\n  //const [isAuthenticating, setIsAuthenticating] = useState(true);\n  const [isAuthenticated, userHasAuthenticated] = useState(false);\n\n  const [mobileOpen, setMobileOpen] = React.useState(false);\n\n  console.log(props);\n\n  useEffect(() => {\n    onLoad();\n  }, []);\n  async function onLoad() {\n    try {\n      await Auth.currentSession();\n      props.loggedIn();\n      userHasAuthenticated(true);\n    } catch (e) {\n      if (e !== \"No current user\") {\n        onError(e);\n      }\n    }\n    //if (props.auth.isAuthenticated) {\n      console.log(\"authenticated\");\n      try {\n        await listClients().then((res) => {\n          console.log(res);\n          console.log(props.storeAllClients(res));\n        });\n      } catch (e) {\n        console.log(e);\n      }\n    //}\n\n    //setIsAuthenticating(false);\n  }\n  /*\n  async function handleLogout() {\n    await Auth.signOut();\n    userHasAuthenticated(false);\n    history.push(\"/login\");\n  }\n  */\n  const handleDrawerToggle = () => {\n    setMobileOpen(!mobileOpen);\n  };\n\n  const container =\n    window !== undefined ? () => window().document.body : undefined;\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <NavBar mobileOpen={mobileOpen} setMobileOpen={setMobileOpen} />\n      <SideBar\n        isAuthenticated={isAuthenticated}\n        mobileOpen={mobileOpen}\n        setMobileOpen={setMobileOpen}\n      />\n      <>\n        <AppContext.Provider\n          value={{ isAuthenticated, userHasAuthenticated }}\n        >\n          <main className={classes.content}>\n            <div className={classes.toolbar} />\n            <Routes />\n          </main>\n        </AppContext.Provider>\n      </>\n    </div>\n  );\n}\nconst mapStateToProps = (state) => ({\n  clients: state.clients,\n  auth: state.auth,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  storeAllClients: (payload) => dispatch(storeAllClients(payload)),\n  loggedIn: () => dispatch(loggedIn()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n"]},"metadata":{},"sourceType":"module"}