{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/adrielarce/Documents/Projects/speech-therapy-tracker/stt-client/src/pages/ViewProgram.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { ProgramContext } from \"../libs/contextLib\";\nimport { useAppContext } from \"../libs/contextLib\";\nimport { onError } from \"../libs/errorLib\";\nimport ReactTable from 'react-table';\nimport { listPrograms } from '../api';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport { Link } from 'react-router-dom';\nimport Moment from 'react-moment';\nimport styled from 'styled-components';\nconst Wrapper = styled.div`\n    padding: 0 40px 40px 40px;\n`;\nconst Update = styled.div`\n    color: #ef9b0f;\n    cursor: pointer;\n`;\nconst Delete = styled.div`\n    color: #ff0000;\n    cursor: pointer;\n`;\n/*\nclass UpdateGoal extends Component {\n    updateUser = event => {\n        event.preventDefault()\n        window.location.href = `/program/update/${this.props.id}`\n    }\n    render() {\n        const updateLink = `/program/update/${this.props.id}`;\n        return (\n            <Link to={updateLink}>\n                Update\n            </Link>\n        )\n    }\n}\nclass DeleteGoal extends Component {\n    deleteUser = event => {\n        event.preventDefault()\n\n        if (\n            window.confirm(\n                `Do you want to delete the goal ${this.props.name} permanently?`,\n            )\n        ) {\n            api.deleteGoalById(this.props.id)\n            window.location.reload()\n        }\n    }\n\n    render() {\n        return <Delete onClick={this.deleteUser}>Delete</Delete>\n    }\n}\n*/\n\nfunction ViewProgram() {\n  _s();\n\n  const {\n    currentClient\n  } = useAppContext();\n  const [programs, setPrograms] = useState([]);\n  const [goals, setGoals] = useState([]);\n  const [latestProgram, setLatestProgram] = useState('');\n  useEffect(() => {\n    onLoad();\n  }, [currentClient]);\n\n  async function onLoad() {\n    try {\n      if (currentClient != '') {\n        setPrograms(await listPrograms(currentClient));\n\n        if (programs.length > 0) {\n          console.log(programs);\n          setLatestProgram(programs[0].programId);\n        }\n      } else {\n        setPrograms([]);\n        setLatestProgram([]);\n      }\n    } catch (e) {\n      if (e !== \"No programs\") {\n        onError(e);\n      }\n    }\n  }\n  /*componentDidMount = async () => {\n   }*/\n\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: \"/program/create\",\n      children: \"Add Program\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }, this), programs.length > 0 ? /*#__PURE__*/_jsxDEV(TableContainer, {\n      component: Paper,\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        \"aria-label\": \"simple table\",\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: [\"Start Date: \", /*#__PURE__*/_jsxDEV(Moment, {\n                format: \"MMMM D YYYY\",\n                children: programs[0].startDate\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 117,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              colSpan: \"2\",\n              children: /*#__PURE__*/_jsxDEV(Link, {\n                to: `/goals?program=${latestProgram}`,\n                children: \"Add Goal\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: [goals.length > 0 ? /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"center\",\n              children: \"Goal\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"center\",\n              children: \"Substeps\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 33\n          }, this) : \"No goals added...\", goals.map((row, index) => /*#__PURE__*/_jsxDEV(TableRow, {\n            style: {\n              textAlign: \"top\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"left\",\n              children: [\"Goal \", index + 1]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"left\",\n              children: row.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"left\",\n              children: [\"1. \", row.substep1, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 144,\n                columnNumber: 78\n              }, this), \"2. \", row.substep2, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 144,\n                columnNumber: 101\n              }, this), \"3. \", row.substep3]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"right\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"right\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 37\n            }, this)]\n          }, row.name, true, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 33\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 17\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ViewProgram, \"Id5pC6/3HeytQZdFv/ixEOY/Yvc=\", false, function () {\n  return [useAppContext];\n});\n\n_c = ViewProgram;\nexport default ViewProgram;\n\nvar _c;\n\n$RefreshReg$(_c, \"ViewProgram\");","map":{"version":3,"sources":["/Users/adrielarce/Documents/Projects/speech-therapy-tracker/stt-client/src/pages/ViewProgram.jsx"],"names":["React","useState","useEffect","ProgramContext","useAppContext","onError","ReactTable","listPrograms","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","Typography","Link","Moment","styled","Wrapper","div","Update","Delete","ViewProgram","currentClient","programs","setPrograms","goals","setGoals","latestProgram","setLatestProgram","onLoad","length","console","log","programId","e","startDate","map","row","index","textAlign","name","substep1","substep2","substep3"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { ProgramContext } from \"../libs/contextLib\";\nimport { useAppContext } from \"../libs/contextLib\";\nimport { onError } from \"../libs/errorLib\";\nimport ReactTable from 'react-table'\nimport { listPrograms } from '../api';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport { Link } from 'react-router-dom';\nimport Moment from 'react-moment';\n\nimport styled from 'styled-components'\n\nconst Wrapper = styled.div`\n    padding: 0 40px 40px 40px;\n`\n\nconst Update = styled.div`\n    color: #ef9b0f;\n    cursor: pointer;\n`\n\nconst Delete = styled.div`\n    color: #ff0000;\n    cursor: pointer;\n`\n\n/*\nclass UpdateGoal extends Component {\n    updateUser = event => {\n        event.preventDefault()\n        window.location.href = `/program/update/${this.props.id}`\n    }\n    render() {\n        const updateLink = `/program/update/${this.props.id}`;\n        return (\n            <Link to={updateLink}>\n                Update\n            </Link>\n        )\n    }\n}\nclass DeleteGoal extends Component {\n    deleteUser = event => {\n        event.preventDefault()\n\n        if (\n            window.confirm(\n                `Do you want to delete the goal ${this.props.name} permanently?`,\n            )\n        ) {\n            api.deleteGoalById(this.props.id)\n            window.location.reload()\n        }\n    }\n\n    render() {\n        return <Delete onClick={this.deleteUser}>Delete</Delete>\n    }\n}\n*/\nfunction ViewProgram() {\n    const { currentClient } = useAppContext();\n    const [programs, setPrograms] = useState([]);\n    const [goals, setGoals] = useState([]);\n    const [latestProgram, setLatestProgram] = useState('');\n\n\n    useEffect(() => {\n        onLoad();\n    }, [currentClient]);\n\n\n    async function onLoad() {\n        try {\n            if (currentClient != '') {\n                setPrograms(await listPrograms(currentClient));\n                if (programs.length > 0) {\n                    console.log(programs);\n                    setLatestProgram(programs[0].programId);\n                }\n            }\n            else {\n                setPrograms([]);\n                setLatestProgram([]);\n            }\n        } catch (e) {\n            if (e !== \"No programs\") {\n                onError(e);\n            }\n        }\n    }\n\n    /*componentDidMount = async () => {\n\n    }*/\n    return (\n        <React.Fragment>\n            <Link to=\"/program/create\">\n                Add Program\n            </Link>\n            <br />\n            {(programs.length > 0) ? (\n                <TableContainer component={Paper}>\n                    <Table aria-label=\"simple table\">\n                        <TableHead>\n                            <TableRow>\n                                <TableCell>\n                                    {\"Start Date: \"}\n\n                                    <Moment format=\"MMMM D YYYY\">\n                                        {programs[0].startDate}\n                                    </Moment>\n                                </TableCell>\n                                <TableCell></TableCell>\n                                <TableCell></TableCell>\n                                <TableCell colSpan=\"2\">\n                                    <Link to={`/goals?program=${latestProgram}`}>\n                                        Add Goal\n                                    </Link>\n                                </TableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {(goals.length > 0) ? (\n                                <TableRow>\n                                    <TableCell></TableCell>\n                                    <TableCell align=\"center\">Goal</TableCell>\n                                    <TableCell align=\"center\">Substeps</TableCell>\n                                    <TableCell></TableCell>\n                                    <TableCell></TableCell>\n                                </TableRow>) : \"No goals added...\"\n                            }\n                            {goals.map((row, index) => (\n                                <TableRow key={row.name} style={{ textAlign: \"top\" }}>\n                                    <TableCell align=\"left\">Goal {index + 1}</TableCell>\n                                    <TableCell align=\"left\">{row.name}</TableCell>\n                                    <TableCell align=\"left\">1. {row.substep1}<br />2. {row.substep2}<br />3. {row.substep3}</TableCell>\n                                    <TableCell align=\"right\"></TableCell>\n                                    <TableCell align=\"right\"></TableCell>\n                                </TableRow>\n                            ))}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n            ) : null\n            }\n        </React.Fragment>\n    )\n}\n\nexport default ViewProgram"]},"metadata":{},"sourceType":"module"}