{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/adrielarce/Documents/Projects/esdm-therapy-tracker-home-final/client/src/pages/MoviesList.jsx\";\nimport React, { Component } from 'react';\nimport ReactTable from 'react-table';\nimport api from '../api';\nimport { DataGrid } from '@material-ui/data-grid';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport styled from 'styled-components';\nconst Wrapper = styled.div`\n    padding: 0 40px 40px 40px;\n`;\nconst Update = styled.div`\n    color: #ef9b0f;\n    cursor: pointer;\n`;\n_c = Update;\nconst Delete = styled.div`\n    color: #ff0000;\n    cursor: pointer;\n`;\n_c2 = Delete;\n\nclass UpdateMovie extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.updateUser = event => {\n      event.preventDefault();\n      window.location.href = `/movies/update/${this.props.id}`;\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Update, {\n      onClick: this.updateUser,\n      children: \"Update\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 16\n    }, this);\n  }\n\n}\n\nclass DeleteMovie extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.deleteUser = event => {\n      event.preventDefault();\n\n      if (window.confirm(`Do tou want to delete the movie ${this.props.id} permanently?`)) {\n        api.deleteMovieById(this.props.id);\n        window.location.reload();\n      }\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Delete, {\n      onClick: this.deleteUser,\n      children: \"Delete\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 16\n    }, this);\n  }\n\n}\n\nclass MoviesList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = async () => {\n      this.setState({\n        isLoading: true\n      });\n      await api.getAllMovies().then(response => {\n        console.log(response.data);\n        this.setState({\n          movies: response.data.data,\n          isLoading: false\n        });\n      });\n    };\n\n    this.state = {\n      movies: [],\n      columns: [],\n      isLoading: false\n    };\n  }\n\n  render() {\n    const {\n      movies,\n      isLoading\n    } = this.state;\n    console.log('TCL: MoviesList -> render -> movies', movies);\n    /*const columns = [\n        {\n            Header: 'ID',\n            accessor: '_id',\n            filterable: true,\n        },\n        {\n            Header: 'Name',\n            accessor: 'name',\n            filterable: true,\n        },\n        {\n            Header: 'Rating',\n            accessor: 'rating',\n            filterable: true,\n        },\n        {\n            Header: 'Time',\n            accessor: 'time',\n            Cell: props => <span>{props.value.join(' / ')}</span>,\n        },\n    ]*/\n\n    const columns = [{\n      field: 'id',\n      headerName: 'ID',\n      width: 70\n    }, {\n      field: 'firstName',\n      headerName: 'First name',\n      width: 130\n    }, {\n      field: 'lastName',\n      headerName: 'Last name',\n      width: 130\n    }, {\n      field: 'age',\n      headerName: 'Age',\n      type: 'number',\n      width: 90\n    }, {\n      field: 'fullName',\n      headerName: 'Full name',\n      description: 'This column has a value getter and is not sortable.',\n      sortable: false,\n      width: 160,\n      valueGetter: params => `${params.getValue('firstName') || ''} ${params.getValue('lastName') || ''}`\n    }];\n    const rows = [{\n      id: 1,\n      lastName: 'Snow',\n      firstName: 'Jon',\n      age: 35\n    }, {\n      id: 2,\n      lastName: 'Lannister',\n      firstName: 'Cersei',\n      age: 42\n    }, {\n      id: 3,\n      lastName: 'Lannister',\n      firstName: 'Jaime',\n      age: 45\n    }, {\n      id: 4,\n      lastName: 'Stark',\n      firstName: 'Arya',\n      age: 16\n    }, {\n      id: 5,\n      lastName: 'Targaryen',\n      firstName: 'Daenerys',\n      age: null\n    }, {\n      id: 6,\n      lastName: 'Melisandre',\n      firstName: null,\n      age: 150\n    }, {\n      id: 7,\n      lastName: 'Clifford',\n      firstName: 'Ferrara',\n      age: 44\n    }, {\n      id: 8,\n      lastName: 'Frances',\n      firstName: 'Rossini',\n      age: 36\n    }, {\n      id: 9,\n      lastName: 'Roxie',\n      firstName: 'Harvey',\n      age: 65\n    }];\n    console.log(movies.data);\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(UpdateMovie, {\n        id: props.original._id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n        component: Paper,\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          \"aria-label\": \"simple table\",\n          children: [/*#__PURE__*/_jsxDEV(TableHead, {\n            children: /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"right\",\n                children: \"Last Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 147,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"right\",\n                children: \"First Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 148,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n            children: movies.map(row => /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"right\",\n                children: row.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 154,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"right\",\n                children: row.rating\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 155,\n                columnNumber: 25\n              }, this)]\n            }, row.name, true, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 25\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default MoviesList;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Update\");\n$RefreshReg$(_c2, \"Delete\");","map":{"version":3,"sources":["/Users/adrielarce/Documents/Projects/esdm-therapy-tracker-home-final/client/src/pages/MoviesList.jsx"],"names":["React","Component","ReactTable","api","DataGrid","makeStyles","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","styled","Wrapper","div","Update","Delete","UpdateMovie","updateUser","event","preventDefault","window","location","href","props","id","render","DeleteMovie","deleteUser","confirm","deleteMovieById","reload","MoviesList","constructor","componentDidMount","setState","isLoading","getAllMovies","then","response","console","log","data","movies","state","columns","field","headerName","width","type","description","sortable","valueGetter","params","getValue","rows","lastName","firstName","age","original","_id","map","row","name","rating"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport ReactTable from 'react-table'\nimport api from '../api'\nimport { DataGrid } from '@material-ui/data-grid';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\n\nimport styled from 'styled-components'\n\nconst Wrapper = styled.div`\n    padding: 0 40px 40px 40px;\n`\n\nconst Update = styled.div`\n    color: #ef9b0f;\n    cursor: pointer;\n`\n\nconst Delete = styled.div`\n    color: #ff0000;\n    cursor: pointer;\n`\nclass UpdateMovie extends Component {\n    updateUser = event => {\n        event.preventDefault()\n\n        window.location.href = `/movies/update/${this.props.id}`\n    }\n\n    render() {\n        return <Update onClick={this.updateUser}>Update</Update>\n    }\n}\n\nclass DeleteMovie extends Component {\n    deleteUser = event => {\n        event.preventDefault()\n\n        if (\n            window.confirm(\n                `Do tou want to delete the movie ${this.props.id} permanently?`,\n            )\n        ) {\n            api.deleteMovieById(this.props.id)\n            window.location.reload()\n        }\n    }\n\n    render() {\n        return <Delete onClick={this.deleteUser}>Delete</Delete>\n    }\n}\n\nclass MoviesList extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            movies: [],\n            columns: [],\n            isLoading: false,\n        }\n    }\n\n    componentDidMount = async () => {\n        this.setState({ isLoading: true })\n\n        await api.getAllMovies().then(response => {\n            console.log(response.data);\n            this.setState({\n                movies: response.data.data,\n                isLoading: false,\n            });\n        })\n    }\n    render() {\n        const { movies, isLoading } = this.state\n        console.log('TCL: MoviesList -> render -> movies', movies)\n\n        /*const columns = [\n            {\n                Header: 'ID',\n                accessor: '_id',\n                filterable: true,\n            },\n            {\n                Header: 'Name',\n                accessor: 'name',\n                filterable: true,\n            },\n            {\n                Header: 'Rating',\n                accessor: 'rating',\n                filterable: true,\n            },\n            {\n                Header: 'Time',\n                accessor: 'time',\n                Cell: props => <span>{props.value.join(' / ')}</span>,\n            },\n        ]*/\n        const columns = [\n            { field: 'id', headerName: 'ID', width: 70 },\n            { field: 'firstName', headerName: 'First name', width: 130 },\n            { field: 'lastName', headerName: 'Last name', width: 130 },\n            {\n              field: 'age',\n              headerName: 'Age',\n              type: 'number',\n              width: 90,\n            },\n            {\n              field: 'fullName',\n              headerName: 'Full name',\n              description: 'This column has a value getter and is not sortable.',\n              sortable: false,\n              width: 160,\n              valueGetter: (params) =>\n                `${params.getValue('firstName') || ''} ${params.getValue('lastName') || ''}`,\n            },\n          ];\n        const rows = [\n            { id: 1, lastName: 'Snow', firstName: 'Jon', age: 35 },\n            { id: 2, lastName: 'Lannister', firstName: 'Cersei', age: 42 },\n            { id: 3, lastName: 'Lannister', firstName: 'Jaime', age: 45 },\n            { id: 4, lastName: 'Stark', firstName: 'Arya', age: 16 },\n            { id: 5, lastName: 'Targaryen', firstName: 'Daenerys', age: null },\n            { id: 6, lastName: 'Melisandre', firstName: null, age: 150 },\n            { id: 7, lastName: 'Clifford', firstName: 'Ferrara', age: 44 },\n            { id: 8, lastName: 'Frances', firstName: 'Rossini', age: 36 },\n            { id: 9, lastName: 'Roxie', firstName: 'Harvey', age: 65 },\n          ];\n\n        console.log(movies.data)\n        return (\n            <React.Fragment>\n            <UpdateMovie id={props.original._id} />\n            <TableContainer component={Paper}>\n                <Table aria-label=\"simple table\">\n                    <TableHead>\n                    <TableRow>\n                        <TableCell align=\"right\">Last Name</TableCell>\n                        <TableCell align=\"right\">First Name</TableCell>\n                    </TableRow>\n                    </TableHead>\n                    <TableBody>\n                    {movies.map((row) => (\n                        <TableRow key={row.name}>\n                        <TableCell align=\"right\">{row.name}</TableCell>\n                        <TableCell align=\"right\">{row.rating}</TableCell>\n                        </TableRow>\n                    ))}\n                    </TableBody>\n                </Table>\n                </TableContainer>\n                </React.Fragment>\n        )\n    }\n}\n\nexport default MoviesList"]},"metadata":{},"sourceType":"module"}