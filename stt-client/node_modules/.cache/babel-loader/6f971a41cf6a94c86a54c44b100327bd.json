{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/adrielarce/Documents/Projects/esdm-therapy-tracker-home-final/client/src/app/index.js\";\nimport React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport jwt_decode from \"jwt-decode\";\nimport setAuthToken from \"../utils/setAuthToken\";\nimport { setCurrentUser, logoutUser } from \"../actions/authActions\";\nimport { SideBar } from '../components';\nimport Landing from '../components/Landing';\nimport Register from \"../components/auth/Register\";\nimport Login from \"../components/auth/Login\";\nimport { Provider } from \"react-redux\";\nimport store from \"../store\";\nimport PrivateRoute from \"../components/private-route/PrivateRoute\";\nimport Dashboard from \"../components/dashboard/Dashboard\";\nimport { MoviesInsert, MoviesUpdate } from '../pages';\nimport 'bootstrap/dist/css/bootstrap.min.css'; // Check for token to keep user logged in\n\nif (localStorage.jwtToken) {\n  // Set auth token header auth\n  const token = localStorage.jwtToken;\n  setAuthToken(token); // Decode token and get user info and exp\n\n  const decoded = jwt_decode(token); // Set user and isAuthenticated\n\n  store.dispatch(setCurrentUser(decoded)); // Check for expired token\n\n  const currentTime = Date.now() / 1000; // to get in milliseconds\n\n  if (decoded.exp < currentTime) {\n    // Logout user\n    store.dispatch(logoutUser()); // Redirect to login\n\n    window.location.href = \"./login\";\n  }\n}\n\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(Provider, {\n    store: store,\n    children: /*#__PURE__*/_jsxDEV(Router, {\n      children: /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(SideBar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/\",\n          component: Landing\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/register\",\n          component: Register\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/login\",\n          component: Login\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n}\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/adrielarce/Documents/Projects/esdm-therapy-tracker-home-final/client/src/app/index.js"],"names":["React","BrowserRouter","Router","Route","Switch","jwt_decode","setAuthToken","setCurrentUser","logoutUser","SideBar","Landing","Register","Login","Provider","store","PrivateRoute","Dashboard","MoviesInsert","MoviesUpdate","localStorage","jwtToken","token","decoded","dispatch","currentTime","Date","now","exp","window","location","href","App"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,KAAlC,EAAyCC,MAAzC,QAAuD,kBAAvD;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,YAAP,MAAyB,uBAAzB;AACA,SAASC,cAAT,EAAyBC,UAAzB,QAA2C,wBAA3C;AACA,SAASC,OAAT,QAAwB,eAAxB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,QAAP,MAAqB,6BAArB;AACA,OAAOC,KAAP,MAAkB,0BAAlB;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,KAAP,MAAkB,UAAlB;AACA,OAAOC,YAAP,MAAyB,0CAAzB;AACA,OAAOC,SAAP,MAAsB,mCAAtB;AACA,SAASC,YAAT,EAAuBC,YAAvB,QAA2C,UAA3C;AACA,OAAO,sCAAP,C,CACA;;AACA,IAAIC,YAAY,CAACC,QAAjB,EAA2B;AACvB;AACA,QAAMC,KAAK,GAAGF,YAAY,CAACC,QAA3B;AACAd,EAAAA,YAAY,CAACe,KAAD,CAAZ,CAHuB,CAIvB;;AACA,QAAMC,OAAO,GAAGjB,UAAU,CAACgB,KAAD,CAA1B,CALuB,CAMvB;;AACAP,EAAAA,KAAK,CAACS,QAAN,CAAehB,cAAc,CAACe,OAAD,CAA7B,EAPuB,CAOiB;;AACxC,QAAME,WAAW,GAAGC,IAAI,CAACC,GAAL,KAAa,IAAjC,CARuB,CAQgB;;AACvC,MAAIJ,OAAO,CAACK,GAAR,GAAcH,WAAlB,EAA+B;AAC7B;AACAV,IAAAA,KAAK,CAACS,QAAN,CAAef,UAAU,EAAzB,EAF6B,CAEI;;AACjCoB,IAAAA,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAuB,SAAvB;AACD;AACJ;;AACD,SAASC,GAAT,GAAe;AACX,sBACI,QAAC,QAAD;AAAU,IAAA,KAAK,EAAEjB,KAAjB;AAAA,2BACI,QAAC,MAAD;AAAA,6BACI,QAAC,MAAD;AAAA,gCACI,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,KAAD;AAAO,UAAA,KAAK,MAAZ;AAAa,UAAA,IAAI,EAAC,GAAlB;AAAsB,UAAA,SAAS,EAAEJ;AAAjC;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI,QAAC,KAAD;AAAO,UAAA,KAAK,MAAZ;AAAa,UAAA,IAAI,EAAC,WAAlB;AAA8B,UAAA,SAAS,EAAEC;AAAzC;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAII,QAAC,KAAD;AAAO,UAAA,KAAK,MAAZ;AAAa,UAAA,IAAI,EAAC,QAAlB;AAA2B,UAAA,SAAS,EAAEC;AAAtC;AAAA;AAAA;AAAA;AAAA,gBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAYH;;KAbQmB,G;AAeT,eAAeA,GAAf","sourcesContent":["import React from 'react'\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\nimport jwt_decode from \"jwt-decode\";\nimport setAuthToken from \"../utils/setAuthToken\";\nimport { setCurrentUser, logoutUser } from \"../actions/authActions\";\nimport { SideBar } from '../components'\nimport Landing from '../components/Landing'\nimport Register from \"../components/auth/Register\";\nimport Login from \"../components/auth/Login\";\nimport { Provider } from \"react-redux\";\nimport store from \"../store\";\nimport PrivateRoute from \"../components/private-route/PrivateRoute\";\nimport Dashboard from \"../components/dashboard/Dashboard\";\nimport { MoviesInsert, MoviesUpdate } from '../pages';\nimport 'bootstrap/dist/css/bootstrap.min.css'\n// Check for token to keep user logged in\nif (localStorage.jwtToken) {\n    // Set auth token header auth\n    const token = localStorage.jwtToken;\n    setAuthToken(token);\n    // Decode token and get user info and exp\n    const decoded = jwt_decode(token);\n    // Set user and isAuthenticated\n    store.dispatch(setCurrentUser(decoded));// Check for expired token\n    const currentTime = Date.now() / 1000; // to get in milliseconds\n    if (decoded.exp < currentTime) {\n      // Logout user\n      store.dispatch(logoutUser());    // Redirect to login\n      window.location.href = \"./login\";\n    }\n}\nfunction App() {\n    return (\n        <Provider store={store}>\n            <Router>\n                <Switch>\n                    <SideBar/>\n                    <Route exact path=\"/\" component={Landing} />\n                    <Route exact path=\"/register\" component={Register} />\n                    <Route exact path=\"/login\" component={Login} />\n                </Switch>\n            </Router>\n        </Provider>\n    )\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}