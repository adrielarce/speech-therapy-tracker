{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/adrielarce/Documents/Projects/speech-therapy-tracker/stt-client/src/app/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { storeAllClients } from \"../redux/actions/clientActions\";\nimport { loggedIn } from \"../redux/actions/authActions\";\nimport Routes from \"../routes/Routes\";\nimport { Auth } from \"aws-amplify\";\nimport { BrowserRouter as Router, useHistory } from \"react-router-dom\";\nimport { onError } from \"../libs/errorLib\";\nimport { makeStyles, createMuiTheme, ThemeProvider } from \"@material-ui/core/styles\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport { listClients } from \"../api\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport NavBar from \"../components/NavBar\";\nimport SideBar from \"../components/SideBar\";\nimport Login from \"../components/cognito-auth/Login\";\nimport Signup from \"../components/cognito-auth/Signup\";\nimport AuthenticatedRoute from \"../routes/AuthenticatedRoute\";\nimport UnauthenticatedRoute from \"../routes/UnauthenticatedRoute\";\nconst drawerWidth = 240;\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: \"flex\"\n  },\n  grow: {\n    flexGrow: \"1\"\n  },\n  drawer: {\n    [theme.breakpoints.up(\"sm\")]: {\n      width: drawerWidth,\n      flexShrink: 0\n    }\n  },\n  appBar: {\n    [theme.breakpoints.up(\"sm\")]: {\n      width: `calc(100% - ${drawerWidth}px)`,\n      marginLeft: drawerWidth\n    }\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n    [theme.breakpoints.up(\"sm\")]: {\n      display: \"none\"\n    }\n  },\n  // necessary for content to be below app bar\n  toolbar: theme.mixins.toolbar,\n  drawerPaper: {\n    width: drawerWidth\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3)\n  }\n}));\n\nfunction App(props) {\n  _s();\n\n  const {\n    isAuthenticated,\n    loggedIn,\n    storeAllClients\n  } = props; //const theme = useTheme();\n\n  const classes = useStyles();\n  const history = useHistory();\n  const [mobileOpen, setMobileOpen] = React.useState(false);\n  useEffect(() => {\n    onLoad(props);\n  }, [props]);\n\n  async function onLoad(props) {\n    try {\n      await Auth.currentSession();\n      loggedIn(); //userHasAuthenticated(true);\n    } catch (e) {\n      if (e !== \"No current user\") {\n        onError(e);\n      }\n    }\n\n    if (isAuthenticated) {\n      try {\n        await listClients().then(res => {\n          storeAllClients(res);\n        });\n      } catch (e) {\n        console.log(e);\n      }\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Router, {\n      history: history,\n      children: [/*#__PURE__*/_jsxDEV(NavBar, {\n        mobileOpen: mobileOpen,\n        setMobileOpen: setMobileOpen\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SideBar, {\n        mobileOpen: mobileOpen,\n        setMobileOpen: setMobileOpen\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"main\", {\n          className: classes.content,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.toolbar\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Routes, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this)\n      }, void 0, false)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"ks/+TS0FC5npnTPP44gXgjLPjkM=\", false, function () {\n  return [useStyles, useHistory];\n});\n\n_c = App;\n\nconst mapStateToProps = state => ({\n  isAuthenticated: state.auth.isAuthenticated\n});\n\nconst mapDispatchToProps = dispatch => ({\n  storeAllClients: payload => dispatch(storeAllClients(payload)),\n  loggedIn: () => dispatch(loggedIn())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/adrielarce/Documents/Projects/speech-therapy-tracker/stt-client/src/app/index.js"],"names":["React","useEffect","connect","storeAllClients","loggedIn","Routes","Auth","BrowserRouter","Router","useHistory","onError","makeStyles","createMuiTheme","ThemeProvider","CssBaseline","listClients","NavBar","SideBar","Login","Signup","AuthenticatedRoute","UnauthenticatedRoute","drawerWidth","useStyles","theme","root","display","grow","flexGrow","drawer","breakpoints","up","width","flexShrink","appBar","marginLeft","menuButton","marginRight","spacing","toolbar","mixins","drawerPaper","content","padding","App","props","isAuthenticated","classes","history","mobileOpen","setMobileOpen","useState","onLoad","currentSession","e","then","res","console","log","mapStateToProps","state","auth","mapDispatchToProps","dispatch","payload"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { storeAllClients } from \"../redux/actions/clientActions\";\nimport { loggedIn } from \"../redux/actions/authActions\";\nimport Routes from \"../routes/Routes\";\nimport { Auth } from \"aws-amplify\";\nimport { BrowserRouter as Router, useHistory } from \"react-router-dom\";\nimport { onError } from \"../libs/errorLib\";\nimport {\n  makeStyles,\n  createMuiTheme,\n  ThemeProvider,\n} from \"@material-ui/core/styles\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport { listClients } from \"../api\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport NavBar from \"../components/NavBar\";\nimport SideBar from \"../components/SideBar\";\nimport Login from \"../components/cognito-auth/Login\";\nimport Signup from \"../components/cognito-auth/Signup\";\nimport AuthenticatedRoute from \"../routes/AuthenticatedRoute\";\nimport UnauthenticatedRoute from \"../routes/UnauthenticatedRoute\";\n\nconst drawerWidth = 240;\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n  },\n  grow: {\n    flexGrow: \"1\",\n  },\n  drawer: {\n    [theme.breakpoints.up(\"sm\")]: {\n      width: drawerWidth,\n      flexShrink: 0,\n    },\n  },\n  appBar: {\n    [theme.breakpoints.up(\"sm\")]: {\n      width: `calc(100% - ${drawerWidth}px)`,\n      marginLeft: drawerWidth,\n    },\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n    [theme.breakpoints.up(\"sm\")]: {\n      display: \"none\",\n    },\n  },\n  // necessary for content to be below app bar\n  toolbar: theme.mixins.toolbar,\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n  },\n}));\n\nfunction App(props) {\n  const { isAuthenticated, loggedIn, storeAllClients } = props;\n  //const theme = useTheme();\n  const classes = useStyles();\n  const history = useHistory();\n\n  const [mobileOpen, setMobileOpen] = React.useState(false);\n\n  useEffect(() => {\n    onLoad(props);\n  }, [props]);\n  async function onLoad(props) {\n    try {\n      await Auth.currentSession();\n      loggedIn();\n      //userHasAuthenticated(true);\n    } catch (e) {\n      if (e !== \"No current user\") {\n        onError(e);\n      }\n    }\n    if (isAuthenticated) {\n      try {\n        await listClients().then((res) => {\n          storeAllClients(res);\n        });\n      } catch (e) {\n        console.log(e);\n      }\n    }\n  }\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <Router history={history}>\n        <NavBar mobileOpen={mobileOpen} setMobileOpen={setMobileOpen} />\n        <SideBar mobileOpen={mobileOpen} setMobileOpen={setMobileOpen} />\n        <>\n          <main className={classes.content}>\n            <div className={classes.toolbar} />\n            <Routes />\n          </main>\n        </>\n      </Router>\n    </div>\n  );\n}\nconst mapStateToProps = (state) => ({\n  isAuthenticated: state.auth.isAuthenticated,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  storeAllClients: (payload) => dispatch(storeAllClients(payload)),\n  loggedIn: () => dispatch(loggedIn()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n"]},"metadata":{},"sourceType":"module"}