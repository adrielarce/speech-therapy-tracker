{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/adrielarce/Documents/Projects/speech-therapy-tracker/stt-client/src/routes/AuthenticatedRoute.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Route, Redirect, useLocation } from \"react-router-dom\";\nimport { useAppContext } from \"../libs/contextLib\";\n\nfunction AuthenticatedRoute({\n  children,\n  ...rest\n}) {\n  _s();\n\n  const {\n    pathname,\n    search\n  } = useLocation(); //const { isAuthenticated } = useAppContext();\n\n  console.log(props);\n  return /*#__PURE__*/_jsxDEV(Route, { ...rest,\n    children: rest.isAuthenticated ? children : /*#__PURE__*/_jsxDEV(Redirect, {\n      to: `/login?redirect=${pathname}${search}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AuthenticatedRoute, \"bnrZEMGh/vp4nVbR8A8bvynvYd4=\", false, function () {\n  return [useLocation];\n});\n\n_c = AuthenticatedRoute;\n\nconst mapStateToProps = state => ({\n  isAuthenticated: state.auth.isAuthenticated\n});\n\nexport default connect(mapStateToProps)(AuthenticatedRoute);\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthenticatedRoute\");","map":{"version":3,"sources":["/Users/adrielarce/Documents/Projects/speech-therapy-tracker/stt-client/src/routes/AuthenticatedRoute.js"],"names":["React","connect","Route","Redirect","useLocation","useAppContext","AuthenticatedRoute","children","rest","pathname","search","console","log","props","isAuthenticated","mapStateToProps","state","auth"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,KAAT,EAAgBC,QAAhB,EAA0BC,WAA1B,QAA6C,kBAA7C;AACA,SAASC,aAAT,QAA8B,oBAA9B;;AAEA,SAASC,kBAAT,CAA4B;AAAEC,EAAAA,QAAF;AAAY,KAAGC;AAAf,CAA5B,EAAmD;AAAA;;AACjD,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,MAAuBN,WAAW,EAAxC,CADiD,CAEjD;;AACAO,EAAAA,OAAO,CAACC,GAAR,CAAYC,KAAZ;AACA,sBACE,QAAC,KAAD,OAAWL,IAAX;AAAA,cACGA,IAAI,CAACM,eAAL,GACCP,QADD,gBAGC,QAAC,QAAD;AAAU,MAAA,EAAE,EAAG,mBAAkBE,QAAS,GAAEC,MAAO;AAAnD;AAAA;AAAA;AAAA;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA,UADF;AASD;;GAbQJ,kB;UACsBF,W;;;KADtBE,kB;;AAeT,MAAMS,eAAe,GAAIC,KAAD,KAAY;AAClCF,EAAAA,eAAe,EAAEE,KAAK,CAACC,IAAN,CAAWH;AADM,CAAZ,CAAxB;;AAIA,eAAeb,OAAO,CAACc,eAAD,CAAP,CAAyBT,kBAAzB,CAAf","sourcesContent":["import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Route, Redirect, useLocation } from \"react-router-dom\";\r\nimport { useAppContext } from \"../libs/contextLib\";\r\n\r\nfunction AuthenticatedRoute({ children, ...rest }) {\r\n  const { pathname, search } = useLocation();\r\n  //const { isAuthenticated } = useAppContext();\r\n  console.log(props);\r\n  return (\r\n    <Route {...rest}>\r\n      {rest.isAuthenticated ? (\r\n        children\r\n      ) : (\r\n        <Redirect to={`/login?redirect=${pathname}${search}`} />\r\n      )}\r\n    </Route>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuthenticated: state.auth.isAuthenticated,\r\n});\r\n\r\nexport default connect(mapStateToProps)(AuthenticatedRoute);\r\n"]},"metadata":{},"sourceType":"module"}