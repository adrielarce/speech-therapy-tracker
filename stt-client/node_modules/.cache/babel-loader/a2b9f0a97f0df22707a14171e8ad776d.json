{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/adrielarce/Documents/Projects/speech-therapy-tracker/stt-client/src/pages/ViewProgram.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { Component } from 'react';\nimport { useAppContext } from \"../libs/contextLib\";\nimport ReactTable from 'react-table';\nimport { listPrograms } from '../api';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\nconst Wrapper = styled.div`\n    padding: 0 40px 40px 40px;\n`;\nconst Update = styled.div`\n    color: #ef9b0f;\n    cursor: pointer;\n`;\nconst Delete = styled.div`\n    color: #ff0000;\n    cursor: pointer;\n`;\n/*\nclass UpdateGoal extends Component {\n    updateUser = event => {\n        event.preventDefault()\n        window.location.href = `/program/update/${this.props.id}`\n    }\n    render() {\n        const updateLink = `/program/update/${this.props.id}`;\n        return (\n            <Link to={updateLink}>\n                Update\n            </Link>\n        )\n    }\n}\nclass DeleteGoal extends Component {\n    deleteUser = event => {\n        event.preventDefault()\n\n        if (\n            window.confirm(\n                `Do you want to delete the goal ${this.props.name} permanently?`,\n            )\n        ) {\n            api.deleteGoalById(this.props.id)\n            window.location.reload()\n        }\n    }\n\n    render() {\n        return <Delete onClick={this.deleteUser}>Delete</Delete>\n    }\n}\n*/\n\nfunction ViewProgram() {\n  _s();\n\n  const {\n    currentClient\n  } = useAppContext();\n  const [programs, setPrograms] = useState([]);\n  useEffect(() => {\n    onLoad();\n  }, []);\n\n  async function onLoad() {\n    try {\n      setPrograms(await listPrograms(currentClient));\n      console.log(programs);\n    } catch (e) {\n      if (e !== \"No programs\") {\n        onError(e);\n      }\n    }\n  }\n  /*componentDidMount = async () => {\n   }*/\n\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: \"/program/create\",\n      children: \"Add Program\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n      component: Paper,\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        \"aria-label\": \"simple table\",\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: [/*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              colSpan: \"2\",\n              children: /*#__PURE__*/_jsxDEV(Link, {\n                to: \"/program/create\",\n                children: \"Add Goal\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"center\",\n              children: \"Goal\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"center\",\n              children: \"Substeps\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: goals.map((row, index) => /*#__PURE__*/_jsxDEV(TableRow, {\n            style: {\n              textAlign: \"top\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"left\",\n              children: [\"Goal \", index + 1]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"left\",\n              children: row.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"left\",\n              children: [\"1. \", row.substep1, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 121,\n                columnNumber: 74\n              }, this), \"2. \", row.substep2, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 121,\n                columnNumber: 97\n              }, this), \"3. \", row.substep3]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"right\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"right\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 33\n            }, this)]\n          }, row.name, true, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ViewProgram, \"Gy42oQkoHsoDiw0FXvpUGKbd5CM=\", false, function () {\n  return [useAppContext];\n});\n\n_c = ViewProgram;\nexport default ViewProgram;\n\nvar _c;\n\n$RefreshReg$(_c, \"ViewProgram\");","map":{"version":3,"sources":["/Users/adrielarce/Documents/Projects/speech-therapy-tracker/stt-client/src/pages/ViewProgram.jsx"],"names":["React","Component","useAppContext","ReactTable","listPrograms","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","Typography","Link","styled","Wrapper","div","Update","Delete","ViewProgram","currentClient","programs","setPrograms","useState","useEffect","onLoad","console","log","e","onError","goals","map","row","index","textAlign","name","substep1","substep2","substep3"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { useAppContext } from \"../libs/contextLib\";\nimport ReactTable from 'react-table'\nimport { listPrograms } from '../api';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport { Link } from 'react-router-dom';\n\nimport styled from 'styled-components'\n\nconst Wrapper = styled.div`\n    padding: 0 40px 40px 40px;\n`\n\nconst Update = styled.div`\n    color: #ef9b0f;\n    cursor: pointer;\n`\n\nconst Delete = styled.div`\n    color: #ff0000;\n    cursor: pointer;\n`\n\n/*\nclass UpdateGoal extends Component {\n    updateUser = event => {\n        event.preventDefault()\n        window.location.href = `/program/update/${this.props.id}`\n    }\n    render() {\n        const updateLink = `/program/update/${this.props.id}`;\n        return (\n            <Link to={updateLink}>\n                Update\n            </Link>\n        )\n    }\n}\nclass DeleteGoal extends Component {\n    deleteUser = event => {\n        event.preventDefault()\n\n        if (\n            window.confirm(\n                `Do you want to delete the goal ${this.props.name} permanently?`,\n            )\n        ) {\n            api.deleteGoalById(this.props.id)\n            window.location.reload()\n        }\n    }\n\n    render() {\n        return <Delete onClick={this.deleteUser}>Delete</Delete>\n    }\n}\n*/\nfunction ViewProgram() {\n    const { currentClient } = useAppContext();\n    const [programs,setPrograms] = useState([]);\n\n    useEffect(() => {\n        onLoad();\n    }, []);\n\n    async function onLoad() {\n        try {\n            setPrograms(await listPrograms(currentClient));\n            console.log(programs);\n        } catch (e) {\n            if (e !== \"No programs\") {\n                onError(e);\n            }\n        }\n        \n    }\n\n    /*componentDidMount = async () => {\n\n    }*/\n    return (\n        <React.Fragment>\n            <Link to=\"/program/create\">\n                Add Program\n                </Link>\n            <br />\n\n            <TableContainer component={Paper}>\n                <Table aria-label=\"simple table\">\n                    <TableHead>\n                        <TableRow>\n                            <TableCell></TableCell>\n                            <TableCell></TableCell>\n                            <TableCell></TableCell>\n                            <TableCell colSpan=\"2\">\n                                <Link to=\"/program/create\">\n                                    Add Goal\n                            </Link>\n                            </TableCell>\n                        </TableRow>\n                        <TableRow>\n                            <TableCell></TableCell>\n                            <TableCell align=\"center\">Goal</TableCell>\n                            <TableCell align=\"center\">Substeps</TableCell>\n                            <TableCell></TableCell>\n                            <TableCell></TableCell>\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {goals.map((row, index) => (\n                            <TableRow key={row.name} style={{ textAlign: \"top\" }}>\n                                <TableCell align=\"left\">Goal {index + 1}</TableCell>\n                                <TableCell align=\"left\">{row.name}</TableCell>\n                                <TableCell align=\"left\">1. {row.substep1}<br />2. {row.substep2}<br />3. {row.substep3}</TableCell>\n                                <TableCell align=\"right\"></TableCell>\n                                <TableCell align=\"right\"></TableCell>\n                            </TableRow>\n                        ))}\n                    </TableBody>\n                </Table>\n            </TableContainer>\n        </React.Fragment>\n    )\n}\n\nexport default ViewProgram"]},"metadata":{},"sourceType":"module"}