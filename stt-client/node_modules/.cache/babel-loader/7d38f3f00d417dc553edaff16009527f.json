{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/adrielarce/Documents/Projects/speech-therapy-tracker/stt-client/src/pages/programs/ProgramSelect.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { connect } from \"react-redux\";\nimport { storeProgram } from \"../../redux/actions/programsActions\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Moment from 'react-moment';\n\nfunction ViewProgram(props) {\n  _s();\n\n  const {\n    programs,\n    currentProgram\n  } = props;\n  useEffect(() => {\n    loadPrograms();\n  }, []);\n  console.log(props);\n\n  const handleChangeProgram = async event => {\n    let program = event.target.value;\n    storeProgram(program);\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: programs ? /*#__PURE__*/_jsxDEV(FormControl, {\n      variant: \"outlined\",\n      className: classes.grow,\n      children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n        id: \"program-select-label\",\n        children: \"Program\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        labelId: \"program-select-label\",\n        id: \"program\",\n        value: currentProgram,\n        onChange: handleChangeProgram,\n        label: \"Program\",\n        children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n          value: \"\",\n          children: /*#__PURE__*/_jsxDEV(\"em\", {\n            children: \"None\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 29\n        }, this), programs.map(prog => /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: prog.programId,\n          children: /*#__PURE__*/_jsxDEV(Moment, {\n            format: \"MMMM D, YYYY\",\n            children: prog.startDate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 37\n          }, this)\n        }, prog.programId, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 33\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 21\n    }, this) : /*#__PURE__*/_jsxDEV(\"h5\", {\n      children: \"No programs yet...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 39\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ViewProgram, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = ViewProgram;\n\nconst mapStateToProps = state => ({\n  programs: state.prog.programs,\n  currentProgram: state.prog.currentProgram\n});\n\nconst mapDispatchToProps = dispatch => ({\n  storeProgram: payload => dispatch(storeProgram(payload))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ViewProgram);\n\nvar _c;\n\n$RefreshReg$(_c, \"ViewProgram\");","map":{"version":3,"sources":["/Users/adrielarce/Documents/Projects/speech-therapy-tracker/stt-client/src/pages/programs/ProgramSelect.jsx"],"names":["React","useEffect","connect","storeProgram","FormControl","Select","InputLabel","Moment","ViewProgram","props","programs","currentProgram","loadPrograms","console","log","handleChangeProgram","event","program","target","value","classes","grow","map","prog","programId","startDate","mapStateToProps","state","mapDispatchToProps","dispatch","payload"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,YAAT,QAA6B,qCAA7B;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,MAAP,MAAmB,cAAnB;;AAGA,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AAAA;;AACxB,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,MAA+BF,KAArC;AAEAR,EAAAA,SAAS,CAAC,MAAM;AACZW,IAAAA,YAAY;AACf,GAFQ,EAEN,EAFM,CAAT;AAGAC,EAAAA,OAAO,CAACC,GAAR,CAAYL,KAAZ;;AAEA,QAAMM,mBAAmB,GAAG,MAAOC,KAAP,IAAiB;AACzC,QAAIC,OAAO,GAAGD,KAAK,CAACE,MAAN,CAAaC,KAA3B;AACAhB,IAAAA,YAAY,CAACc,OAAD,CAAZ;AACH,GAHD;;AAKA,sBACI,QAAC,KAAD,CAAO,QAAP;AAAA,cAEQP,QAAQ,gBACJ,QAAC,WAAD;AAAa,MAAA,OAAO,EAAC,UAArB;AAAgC,MAAA,SAAS,EAAEU,OAAO,CAACC,IAAnD;AAAA,8BACI,QAAC,UAAD;AAAY,QAAA,EAAE,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,MAAD;AACI,QAAA,OAAO,EAAC,sBADZ;AAEI,QAAA,EAAE,EAAC,SAFP;AAGI,QAAA,KAAK,EAAEV,cAHX;AAII,QAAA,QAAQ,EAAEI,mBAJd;AAKI,QAAA,KAAK,EAAC,SALV;AAAA,gCAOI,QAAC,QAAD;AAAU,UAAA,KAAK,EAAC,EAAhB;AAAA,iCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAPJ,EAUKL,QAAQ,CAACY,GAAT,CAAcC,IAAD,iBACV,QAAC,QAAD;AAA+B,UAAA,KAAK,EAAEA,IAAI,CAACC,SAA3C;AAAA,iCACI,QAAC,MAAD;AAAQ,YAAA,MAAM,EAAC,cAAf;AAAA,sBAA+BD,IAAI,CAACE;AAApC;AAAA;AAAA;AAAA;AAAA;AADJ,WAAeF,IAAI,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA,gBADH,CAVL;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADI,gBAmBc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AArB9B;AAAA;AAAA;AAAA;AAAA,UADJ;AA0BH;;GAvCQhB,W;;KAAAA,W;;AAyCT,MAAMkB,eAAe,GAAIC,KAAD,KAAY;AAChCjB,EAAAA,QAAQ,EAAEiB,KAAK,CAACJ,IAAN,CAAWb,QADW;AAEhCC,EAAAA,cAAc,EAAEgB,KAAK,CAACJ,IAAN,CAAWZ;AAFK,CAAZ,CAAxB;;AAKA,MAAMiB,kBAAkB,GAAIC,QAAD,KAAe;AACtC1B,EAAAA,YAAY,EAAG2B,OAAD,IAAaD,QAAQ,CAAC1B,YAAY,CAAC2B,OAAD,CAAb;AADG,CAAf,CAA3B;;AAIA,eAAe5B,OAAO,CAACwB,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CpB,WAA7C,CAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport { connect } from \"react-redux\";\nimport { storeProgram } from \"../../redux/actions/programsActions\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Moment from 'react-moment';\n\n\nfunction ViewProgram(props) {\n    const { programs, currentProgram } = props;\n\n    useEffect(() => {\n        loadPrograms();\n    }, []);\n    console.log(props);\n\n    const handleChangeProgram = async (event) => {\n        let program = event.target.value;\n        storeProgram(program);\n    }\n\n    return (\n        <React.Fragment>\n            {\n                programs ? (\n                    <FormControl variant=\"outlined\" className={classes.grow}>\n                        <InputLabel id=\"program-select-label\">Program</InputLabel>\n                        <Select\n                            labelId=\"program-select-label\"\n                            id=\"program\"\n                            value={currentProgram}\n                            onChange={handleChangeProgram}\n                            label=\"Program\"\n                        >\n                            <MenuItem value=\"\">\n                                <em>None</em>\n                            </MenuItem>\n                            {programs.map((prog) => (\n                                <MenuItem key={prog.programId} value={prog.programId}>\n                                    <Moment format=\"MMMM D, YYYY\">{prog.startDate}</Moment>\n                                </MenuItem>\n                            ))}\n                        </Select>\n                    </FormControl>) : <h5>No programs yet...</h5>\n            }\n        </React.Fragment>\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    programs: state.prog.programs,\n    currentProgram: state.prog.currentProgram,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n    storeProgram: (payload) => dispatch(storeProgram(payload)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ViewProgram);"]},"metadata":{},"sourceType":"module"}