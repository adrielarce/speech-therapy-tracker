{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/adrielarce/Documents/Projects/speech-therapy-tracker/stt-client/src/pages/programs/ViewProgram.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useAppContext } from \"../../libs/contextLib\";\nimport { onError } from \"../../libs/errorLib\";\nimport { listPrograms } from '../../api';\nimport { Link } from 'react-router-dom';\nimport Moment from 'react-moment';\nimport ViewGoals from './ViewGoals';\nimport styled from 'styled-components';\nconst Wrapper = styled.div`\n    padding: 0 40px 40px 40px;\n`;\nconst Update = styled.div`\n    color: #ef9b0f;\n    cursor: pointer;\n`;\nconst Delete = styled.div`\n    color: #ff0000;\n    cursor: pointer;\n`;\n/*\nclass UpdateGoal extends Component {\n    updateUser = event => {\n        event.preventDefault()\n        window.location.href = `/program/update/${this.props.id}`\n    }\n    render() {\n        const updateLink = `/program/update/${this.props.id}`;\n        return (\n            <Link to={updateLink}>\n                Update\n            </Link>\n        )\n    }\n}\nclass DeleteGoal extends Component {\n    deleteUser = event => {\n        event.preventDefault()\n\n        if (\n            window.confirm(\n                `Do you want to delete the goal ${this.props.name} permanently?`,\n            )\n        ) {\n            api.deleteGoalById(this.props.id)\n            window.location.reload()\n        }\n    }\n\n    render() {\n        return <Delete onClick={this.deleteUser}>Delete</Delete>\n    }\n}\n*/\n\nfunction ViewProgram() {\n  _s();\n\n  const {\n    currentClient\n  } = useAppContext();\n  const [programs, setPrograms] = useState([]);\n  const [goals, setGoals] = useState([]);\n  const [latestProgram, setLatestProgram] = useState('');\n  useEffect(() => {\n    onLoad();\n  }, [currentClient]);\n\n  async function onLoad() {\n    try {\n      if (currentClient != '') {\n        setPrograms(await listPrograms(currentClient));\n\n        if (programs.length > 0) {\n          console.log(programs);\n          setLatestProgram(programs[0].programId);\n        }\n      } else {\n        setPrograms([]);\n        setLatestProgram('');\n      }\n    } catch (e) {\n      if (e !== \"No programs\") {\n        onError(e);\n      }\n    }\n  }\n  /*componentDidMount = async () => {\n   }*/\n\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: \"/program/create\",\n      children: \"Add Program\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ViewGoals, {\n      program: latestProgram\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ViewProgram, \"Id5pC6/3HeytQZdFv/ixEOY/Yvc=\", false, function () {\n  return [useAppContext];\n});\n\n_c = ViewProgram;\nexport default ViewProgram;\n\nvar _c;\n\n$RefreshReg$(_c, \"ViewProgram\");","map":{"version":3,"sources":["/Users/adrielarce/Documents/Projects/speech-therapy-tracker/stt-client/src/pages/programs/ViewProgram.jsx"],"names":["React","useState","useEffect","useAppContext","onError","listPrograms","Link","Moment","ViewGoals","styled","Wrapper","div","Update","Delete","ViewProgram","currentClient","programs","setPrograms","goals","setGoals","latestProgram","setLatestProgram","onLoad","length","console","log","programId","e"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,aAAT,QAA8B,uBAA9B;AACA,SAASC,OAAT,QAAwB,qBAAxB;AACA,SAASC,YAAT,QAA6B,WAA7B;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AAEA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,MAAMC,OAAO,GAAGD,MAAM,CAACE,GAAI;AAC3B;AACA,CAFA;AAIA,MAAMC,MAAM,GAAGH,MAAM,CAACE,GAAI;AAC1B;AACA;AACA,CAHA;AAKA,MAAME,MAAM,GAAGJ,MAAM,CAACE,GAAI;AAC1B;AACA;AACA,CAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASG,WAAT,GAAuB;AAAA;;AACnB,QAAM;AAAEC,IAAAA;AAAF,MAAoBZ,aAAa,EAAvC;AACA,QAAM,CAACa,QAAD,EAAWC,WAAX,IAA0BhB,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACiB,KAAD,EAAQC,QAAR,IAAoBlB,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACmB,aAAD,EAAgBC,gBAAhB,IAAoCpB,QAAQ,CAAC,EAAD,CAAlD;AAGAC,EAAAA,SAAS,CAAC,MAAM;AACZoB,IAAAA,MAAM;AACT,GAFQ,EAEN,CAACP,aAAD,CAFM,CAAT;;AAKA,iBAAeO,MAAf,GAAwB;AACpB,QAAI;AACA,UAAIP,aAAa,IAAI,EAArB,EAAyB;AACrBE,QAAAA,WAAW,CAAC,MAAMZ,YAAY,CAACU,aAAD,CAAnB,CAAX;;AACA,YAAIC,QAAQ,CAACO,MAAT,GAAkB,CAAtB,EAAyB;AACrBC,UAAAA,OAAO,CAACC,GAAR,CAAYT,QAAZ;AACAK,UAAAA,gBAAgB,CAACL,QAAQ,CAAC,CAAD,CAAR,CAAYU,SAAb,CAAhB;AACH;AACJ,OAND,MAOK;AACDT,QAAAA,WAAW,CAAC,EAAD,CAAX;AACAI,QAAAA,gBAAgB,CAAC,EAAD,CAAhB;AACH;AACJ,KAZD,CAYE,OAAOM,CAAP,EAAU;AACR,UAAIA,CAAC,KAAK,aAAV,EAAyB;AACrBvB,QAAAA,OAAO,CAACuB,CAAD,CAAP;AACH;AACJ;AACJ;AAED;AACJ;;;AAEI,sBACI,QAAC,KAAD,CAAO,QAAP;AAAA,4BACI,QAAC,IAAD;AAAM,MAAA,EAAE,EAAC,iBAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAII;AAAA;AAAA;AAAA;AAAA,YAJJ,eAKI,QAAC,SAAD;AAAW,MAAA,OAAO,EAAEP;AAApB;AAAA;AAAA;AAAA;AAAA,YALJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AASH;;GA5CQN,W;UACqBX,a;;;KADrBW,W;AA8CT,eAAeA,WAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useAppContext } from \"../../libs/contextLib\";\nimport { onError } from \"../../libs/errorLib\";\nimport { listPrograms } from '../../api';\nimport { Link } from 'react-router-dom';\nimport Moment from 'react-moment';\nimport ViewGoals from './ViewGoals';\n\nimport styled from 'styled-components'\n\nconst Wrapper = styled.div`\n    padding: 0 40px 40px 40px;\n`\n\nconst Update = styled.div`\n    color: #ef9b0f;\n    cursor: pointer;\n`\n\nconst Delete = styled.div`\n    color: #ff0000;\n    cursor: pointer;\n`\n\n/*\nclass UpdateGoal extends Component {\n    updateUser = event => {\n        event.preventDefault()\n        window.location.href = `/program/update/${this.props.id}`\n    }\n    render() {\n        const updateLink = `/program/update/${this.props.id}`;\n        return (\n            <Link to={updateLink}>\n                Update\n            </Link>\n        )\n    }\n}\nclass DeleteGoal extends Component {\n    deleteUser = event => {\n        event.preventDefault()\n\n        if (\n            window.confirm(\n                `Do you want to delete the goal ${this.props.name} permanently?`,\n            )\n        ) {\n            api.deleteGoalById(this.props.id)\n            window.location.reload()\n        }\n    }\n\n    render() {\n        return <Delete onClick={this.deleteUser}>Delete</Delete>\n    }\n}\n*/\nfunction ViewProgram() {\n    const { currentClient } = useAppContext();\n    const [programs, setPrograms] = useState([]);\n    const [goals, setGoals] = useState([]);\n    const [latestProgram, setLatestProgram] = useState('');\n\n\n    useEffect(() => {\n        onLoad();\n    }, [currentClient]);\n\n\n    async function onLoad() {\n        try {\n            if (currentClient != '') {\n                setPrograms(await listPrograms(currentClient));\n                if (programs.length > 0) {\n                    console.log(programs);\n                    setLatestProgram(programs[0].programId);\n                }\n            }\n            else {\n                setPrograms([]);\n                setLatestProgram('');\n            }\n        } catch (e) {\n            if (e !== \"No programs\") {\n                onError(e);\n            }\n        }\n    }\n\n    /*componentDidMount = async () => {\n\n    }*/\n    return (\n        <React.Fragment>\n            <Link to=\"/program/create\">\n                Add Program\n            </Link>\n            <br />\n            <ViewGoals program={latestProgram} />\n        </React.Fragment>\n    )\n}\n\nexport default ViewProgram"]},"metadata":{},"sourceType":"module"}