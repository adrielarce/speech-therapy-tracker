{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/adrielarce/Documents/Projects/speech-therapy-tracker/stt-client/src/pages/programs/ViewGoals.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { onError } from \"../../libs/errorLib\";\nimport AddGoals from './AddGoals';\nimport { listGoals } from '../../api';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Moment from 'react-moment';\nimport { makeStyles } from \"@material-ui/core/styles\";\nconst useStyles = makeStyles(theme => ({\n  grow: {\n    flexGrow: \"1\"\n  },\n  formControl: {\n    minWidth: 150\n  }\n}));\n\nfunction ViewGoals(props) {\n  _s();\n\n  const classes = useStyles();\n  const [goals, setGoals] = useState([]);\n  const program = props.program ? props.program : '';\n  const goalBank = [{\n    id: \"artic-1\",\n    description: \"Given 20 sounds and a verbal prompt or model, STUDENT will articulate the sound(s) of / / at the isolation level with 80% accuracy in 4 out of 5 opportunities.\"\n  }];\n  useEffect(() => {\n    if (program != '') loadGoals(program.programId);else setGoals([]);\n  }, [program]);\n\n  async function loadGoals(id) {\n    //event.preventDefault();\n    //setIsLoading(true);\n    try {\n      await listGoals(id).then(data => {\n        setGoals(data);\n      }); //clear form values after submit complete\n    } catch (e) {\n      console.log(e);\n    }\n  }\n  /*componentDidMount = async () => {\n   }*/\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.grow,\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      style: {\n        padding: '1rem'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        children: [\"Start Date: \", program ? /*#__PURE__*/_jsxDEV(Moment, {\n          format: \"MMMM D, YYYY\",\n          children: program.startDate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 47\n        }, this) : '']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Container, {\n        children: [/*#__PURE__*/_jsxDEV(Accordion, {\n          children: [/*#__PURE__*/_jsxDEV(AccordionSummary, {\n            expandIcon: /*#__PURE__*/_jsxDEV(ExpandMoreIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 41\n            }, this),\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              children: \"Current Goal Summary\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(AccordionDetails, {\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              spacing: 1,\n              children: /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                className: classes.grow,\n                children: /*#__PURE__*/_jsxDEV(TableContainer, {\n                  children: /*#__PURE__*/_jsxDEV(Table, {\n                    children: [/*#__PURE__*/_jsxDEV(TableHead, {\n                      children: /*#__PURE__*/_jsxDEV(TableRow, {\n                        children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                          align: \"left\",\n                          children: \"Goal\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 89,\n                          columnNumber: 53\n                        }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                          align: \"left\",\n                          children: \"Target\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 90,\n                          columnNumber: 53\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 88,\n                        columnNumber: 49\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 87,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n                      children: goals.map(goal => /*#__PURE__*/_jsxDEV(TableRow, {\n                        className: classes.grow,\n                        children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                          align: \"left\",\n                          children: goal.longTermGoal\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 96,\n                          columnNumber: 57\n                        }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                          align: \"left\",\n                          children: goal.target\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 97,\n                          columnNumber: 57\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 95,\n                        columnNumber: 53\n                      }, this))\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 93,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 86,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 85,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(AddGoals, {\n          program: program,\n          loadGoals: loadGoals\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ViewGoals, \"n47XAh3lNFzhO5a3H/V/qV7VY6A=\", false, function () {\n  return [useStyles];\n});\n\n_c = ViewGoals;\nexport default ViewGoals;\n\nvar _c;\n\n$RefreshReg$(_c, \"ViewGoals\");","map":{"version":3,"sources":["/Users/adrielarce/Documents/Projects/speech-therapy-tracker/stt-client/src/pages/programs/ViewGoals.jsx"],"names":["React","useState","useEffect","onError","AddGoals","listGoals","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","Container","Grid","Card","CardContent","Typography","Accordion","AccordionSummary","AccordionDetails","ExpandMoreIcon","Moment","makeStyles","useStyles","theme","grow","flexGrow","formControl","minWidth","ViewGoals","props","classes","goals","setGoals","program","goalBank","id","description","loadGoals","programId","then","data","e","console","log","padding","startDate","map","goal","longTermGoal","target"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { onError } from \"../../libs/errorLib\";\nimport AddGoals from './AddGoals';\nimport { listGoals } from '../../api';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Moment from 'react-moment';\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n    grow: {\n        flexGrow: \"1\",\n    },\n    formControl: {\n        minWidth: 150,\n    },\n}));\n\nfunction ViewGoals(props) {\n    const classes = useStyles();\n    const [goals, setGoals] = useState([]);\n    const program = (props.program) ? props.program : '';\n\n    const goalBank = [{\n        id: \"artic-1\",\n        description: \"Given 20 sounds and a verbal prompt or model, STUDENT will articulate the sound(s) of / / at the isolation level with 80% accuracy in 4 out of 5 opportunities.\",\n    }];\n\n    useEffect(() => {\n        if (program != '')\n            loadGoals(program.programId);\n        else\n            setGoals([]);\n    }, [program]);\n\n    async function loadGoals(id) {\n        //event.preventDefault();\n        //setIsLoading(true);\n        try {\n            await listGoals(id).then((data) => {\n                setGoals(data);\n            });\n            //clear form values after submit complete\n\n        } catch (e) {\n            console.log(e);\n        }\n    }\n\n\n\n    /*componentDidMount = async () => {\n\n    }*/\n    return (\n        <div className={classes.grow}>\n            <Paper style={{ padding: '1rem' }}>\n                <Typography variant=\"h5\">\n                    Start Date: {(program) ? (<Moment format=\"MMMM D, YYYY\">{program.startDate}</Moment>) : ''}\n                </Typography>\n                <Container>\n                    <Accordion>\n                        <AccordionSummary\n                            expandIcon={<ExpandMoreIcon />}\n                        >\n                            <Typography variant=\"h6\">Current Goal Summary</Typography>\n                        </AccordionSummary>\n                        <AccordionDetails>\n                            <Grid container spacing={1}>\n                                <Grid item className={classes.grow} >\n                                    <TableContainer>\n                                        <Table>\n                                            <TableHead>\n                                                <TableRow>\n                                                    <TableCell align=\"left\">Goal</TableCell>\n                                                    <TableCell align=\"left\">Target</TableCell>\n                                                </TableRow>\n                                            </TableHead>\n                                            <TableBody>\n                                                {goals.map((goal) => (\n                                                    <TableRow className={classes.grow}>\n                                                        <TableCell align=\"left\">{goal.longTermGoal}</TableCell>\n                                                        <TableCell align=\"left\">{goal.target}</TableCell>\n                                                    </TableRow>\n                                                ))}\n                                            </TableBody>\n                                        </Table>\n                                    </TableContainer>\n                                </Grid>\n                            </Grid>\n                        </AccordionDetails>\n                    </Accordion>\n                    <AddGoals program={program} loadGoals={loadGoals} />\n                </Container>\n            </Paper>\n        </div>\n    )\n}\n\nexport default ViewGoals"]},"metadata":{},"sourceType":"module"}