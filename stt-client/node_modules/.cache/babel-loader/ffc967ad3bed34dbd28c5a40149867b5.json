{"ast":null,"code":"import { SET_GOALS, APPEND_GOAL, CLEAR_GOALS } from \"../actions/types\";\nconst initialState = {\n  goals: []\n};\nexport default function goalsReducer(state = initialState, action) {\n  switch (action.type) {\n    case SET_GOALS:\n      return Object.assign({}, state, {\n        goals: action.goals\n      });\n\n    case APPEND_GOAL:\n      let goals = state.goals;\n      goals = goals.concat(action.goal);\n      console.log(goals);\n      return Object.assign({}, state, {\n        goals: goals\n      });\n\n    case CLEAR_GOALS:\n      return Object.assign({}, state, initialState);\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/adrielarce/Documents/Projects/speech-therapy-tracker/stt-client/src/redux/reducers/goalsReducer.js"],"names":["SET_GOALS","APPEND_GOAL","CLEAR_GOALS","initialState","goals","goalsReducer","state","action","type","Object","assign","concat","goal","console","log"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,WAApB,EAAiCC,WAAjC,QAAoD,kBAApD;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAE;AADY,CAArB;AAIA,eAAe,SAASC,YAAT,CAAsBC,KAAK,GAAGH,YAA9B,EAA4CI,MAA5C,EAAoD;AACjE,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKR,SAAL;AACE,aAAOS,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAlB,EAAyB;AAC9BF,QAAAA,KAAK,EAAEG,MAAM,CAACH;AADgB,OAAzB,CAAP;;AAGF,SAAKH,WAAL;AACE,UAAIG,KAAK,GAAGE,KAAK,CAACF,KAAlB;AACAA,MAAAA,KAAK,GAAGA,KAAK,CAACO,MAAN,CAAaJ,MAAM,CAACK,IAApB,CAAR;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYV,KAAZ;AACA,aAAOK,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAlB,EAAyB;AAC9BF,QAAAA,KAAK,EAAEA;AADuB,OAAzB,CAAP;;AAGF,SAAKF,WAAL;AACE,aAAOO,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAlB,EAAyBH,YAAzB,CAAP;;AACF;AACE,aAAOG,KAAP;AAfJ;AAiBD","sourcesContent":["import { SET_GOALS, APPEND_GOAL, CLEAR_GOALS } from \"../actions/types\";\n\nconst initialState = {\n  goals: [],\n};\n\nexport default function goalsReducer(state = initialState, action) {\n  switch (action.type) {\n    case SET_GOALS:\n      return Object.assign({}, state, {\n        goals: action.goals,\n      });\n    case APPEND_GOAL:\n      let goals = state.goals;\n      goals = goals.concat(action.goal);\n      console.log(goals);\n      return Object.assign({}, state, {\n        goals: goals,\n      });\n    case CLEAR_GOALS:\n      return Object.assign({}, state, initialState);\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}