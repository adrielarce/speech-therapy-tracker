{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/adrielarce/Documents/Projects/speech-therapy-tracker/stt-client/src/pages/programs/ProgramSelect.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { connect } from \"react-redux\";\nimport { storeProgram } from \"../../redux/actions/programsActions\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Moment from 'react-moment';\nimport { makeStyles } from '@material-ui/core/styles';\nconst useStyles = makeStyles(() => ({\n  formControl: {\n    display: \"block\"\n  },\n  programSelect: {\n    minWidth: 120\n  }\n}));\n\nfunction ViewProgram(props) {\n  _s();\n\n  const {\n    programs,\n    currentProgram,\n    storeProgram\n  } = props;\n  const classes = useStyles();\n  console.log(currentProgram);\n\n  const handleChangeProgram = async event => {\n    let program = event.target.value;\n    console.log(program);\n    storeProgram(program);\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: console.log(currentProgram.programId)(programs.length > 0) ? /*#__PURE__*/_jsxDEV(FormControl, {\n      variant: \"outlined\",\n      className: classes.formControl,\n      children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n        id: \"program-select-label\",\n        children: \"Program\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        labelId: \"program-select-label\",\n        id: \"program\",\n        value: currentProgram.programId,\n        onChange: handleChangeProgram,\n        label: \"Program\",\n        className: classes.programSelect,\n        children: programs.map(prog => /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: prog.programId,\n          children: /*#__PURE__*/_jsxDEV(Moment, {\n            format: \"MMMM D, YYYY\",\n            children: prog.startDate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 37\n          }, this)\n        }, prog.programId, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 33\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 21\n    }, this) : /*#__PURE__*/_jsxDEV(\"h5\", {\n      children: \"No programs yet...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 39\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ViewProgram, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = ViewProgram;\n\nconst mapStateToProps = state => ({\n  programs: state.prog.programs,\n  currentProgram: state.prog.currentProgram\n});\n\nconst mapDispatchToProps = dispatch => ({\n  storeProgram: payload => dispatch(storeProgram(payload))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ViewProgram);\n\nvar _c;\n\n$RefreshReg$(_c, \"ViewProgram\");","map":{"version":3,"sources":["/Users/adrielarce/Documents/Projects/speech-therapy-tracker/stt-client/src/pages/programs/ProgramSelect.jsx"],"names":["React","connect","storeProgram","FormControl","Select","MenuItem","InputLabel","Moment","makeStyles","useStyles","formControl","display","programSelect","minWidth","ViewProgram","props","programs","currentProgram","classes","console","log","handleChangeProgram","event","program","target","value","programId","length","map","prog","startDate","mapStateToProps","state","mapDispatchToProps","dispatch","payload"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from \"react-redux\";\nimport { storeProgram } from \"../../redux/actions/programsActions\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Moment from 'react-moment';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(() => ({\n    formControl: {\n        display: \"block\",\n    },\n    programSelect: {\n        minWidth: 120,\n    },\n}));\n\nfunction ViewProgram(props) {\n    const { programs, currentProgram, storeProgram } = props;\n    const classes = useStyles();\n    console.log(currentProgram);\n\n    const handleChangeProgram = async (event) => {\n        let program = event.target.value;\n        console.log(program);\n        storeProgram(program);\n    }\n\n    return (\n        <React.Fragment>\n            {\n                console.log(currentProgram.programId)\n                (programs.length > 0) ? (\n                    <FormControl variant=\"outlined\" className={classes.formControl}>\n                        <InputLabel id=\"program-select-label\">Program</InputLabel>\n                        <Select\n                            labelId=\"program-select-label\"\n                            id=\"program\"\n                            value={currentProgram.programId}\n                            onChange={handleChangeProgram}\n                            label=\"Program\"\n                            className={classes.programSelect}\n                        >\n                            {programs.map((prog) => (\n                                <MenuItem key={prog.programId} value={prog.programId}>\n                                    <Moment format=\"MMMM D, YYYY\">{prog.startDate}</Moment>\n                                </MenuItem>\n                            ))}\n                        </Select>\n                    </FormControl>) : <h5>No programs yet...</h5>\n            }\n        </React.Fragment>\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    programs: state.prog.programs,\n    currentProgram: state.prog.currentProgram,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n    storeProgram: (payload) => dispatch(storeProgram(payload)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ViewProgram);"]},"metadata":{},"sourceType":"module"}