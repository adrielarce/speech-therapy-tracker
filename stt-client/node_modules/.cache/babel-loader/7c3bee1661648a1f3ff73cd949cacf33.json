{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/adrielarce/Documents/Projects/speech-therapy-tracker/stt-client/src/app/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { storeAllClients } from \"../redux/actions/clientActions\";\nimport { loggedIn } from \"../redux/actions/authActions\";\nimport Routes from \"../routes/Routes\";\nimport { Auth } from \"aws-amplify\";\nimport { BrowserRouter as Router, useHistory } from \"react-router-dom\";\nimport { onError } from \"../libs/errorLib\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport { listClients } from \"../api\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport styled, { ThemeProvider } from \"styled-components\";\nimport NavBar from \"../components/NavBar\";\nimport SideBar from \"../components/SideBar\";\nconst theme = {\n  colors: {\n    powderWhite: \"#FFFDF9\",\n    persianGreen: \"#06B49A\",\n    lightBlue: \"#AFDBD2\",\n    onyx: \"#36313D\"\n  },\n  fonts: [\"sans-serif\", \"Roboto\"],\n  fontSizes: {\n    small: \"1em\",\n    medium: \"2em\",\n    large: \"3em\"\n  },\n  spacing: {\n    small: \"8px\",\n    medium: \"16px\",\n    large: \"24px\"\n  }\n};\nconst drawerWidth = 240;\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: \"flex\"\n  },\n  grow: {\n    flexGrow: \"1\"\n  },\n  drawer: {\n    [theme.breakpoints.up(\"sm\")]: {\n      width: drawerWidth,\n      flexShrink: 0\n    }\n  },\n  appBar: {\n    [theme.breakpoints.up(\"sm\")]: {\n      width: `calc(100% - ${drawerWidth}px)`,\n      marginLeft: drawerWidth\n    }\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n    [theme.breakpoints.up(\"sm\")]: {\n      display: \"none\"\n    }\n  },\n  // necessary for content to be below app bar\n  toolbar: theme.mixins.toolbar,\n  drawerPaper: {\n    width: drawerWidth\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3)\n  }\n}));\n\nfunction App(props) {\n  _s();\n\n  const {\n    window\n  } = props; //const theme = useTheme();\n\n  const classes = useStyles();\n  const history = useHistory(); //const [isAuthenticating, setIsAuthenticating] = useState(true);\n\n  const [isAuthenticated, userHasAuthenticated] = useState(false);\n  const [mobileOpen, setMobileOpen] = React.useState(false);\n  useEffect(() => {\n    onLoad(props);\n  }, []);\n\n  async function onLoad(props) {\n    console.log(props);\n\n    try {\n      await Auth.currentSession();\n      props.loggedIn(); //userHasAuthenticated(true);\n    } catch (e) {\n      if (e !== \"No current user\") {\n        onError(e);\n      }\n    }\n\n    if (props.isAuthenticated) {\n      console.log(\"authenticated\");\n\n      try {\n        await listClients().then(res => {\n          props.storeAllClients(res);\n        });\n      } catch (e) {\n        console.log(e);\n      }\n    } //setIsAuthenticating(false);\n\n  }\n  /*\n  async function handleLogout() {\n    await Auth.signOut();\n    userHasAuthenticated(false);\n    history.push(\"/login\");\n  }\n  */\n\n\n  const handleDrawerToggle = () => {\n    setMobileOpen(!mobileOpen);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ThemeProvider, {\n      theme: theme,\n      children: /*#__PURE__*/_jsxDEV(Router, {\n        history: history,\n        children: [/*#__PURE__*/_jsxDEV(NavBar, {\n          mobileOpen: mobileOpen,\n          setMobileOpen: setMobileOpen\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(SideBar, {\n          isAuthenticated: isAuthenticated,\n          mobileOpen: mobileOpen,\n          setMobileOpen: setMobileOpen\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(\"main\", {\n            className: classes.content,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: classes.toolbar\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Routes, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 13\n          }, this)\n        }, void 0, false)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 124,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"BEm5VtiyURTo+7tkiAZ5bum1RBM=\", false, function () {\n  return [useStyles, useHistory];\n});\n\n_c = App;\n\nconst mapStateToProps = state => ({\n  clients: state.client.clients,\n  isAuthenticated: state.auth.isAuthenticated\n});\n\nconst mapDispatchToProps = dispatch => ({\n  storeAllClients: payload => dispatch(storeAllClients(payload)),\n  loggedIn: () => dispatch(loggedIn())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/adrielarce/Documents/Projects/speech-therapy-tracker/stt-client/src/app/index.js"],"names":["React","useState","useEffect","connect","storeAllClients","loggedIn","Routes","Auth","BrowserRouter","Router","useHistory","onError","makeStyles","CssBaseline","listClients","styled","ThemeProvider","NavBar","SideBar","theme","colors","powderWhite","persianGreen","lightBlue","onyx","fonts","fontSizes","small","medium","large","spacing","drawerWidth","useStyles","root","display","grow","flexGrow","drawer","breakpoints","up","width","flexShrink","appBar","marginLeft","menuButton","marginRight","toolbar","mixins","drawerPaper","content","padding","App","props","window","classes","history","isAuthenticated","userHasAuthenticated","mobileOpen","setMobileOpen","onLoad","console","log","currentSession","e","then","res","handleDrawerToggle","mapStateToProps","state","clients","client","auth","mapDispatchToProps","dispatch","payload"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { storeAllClients } from \"../redux/actions/clientActions\";\nimport { loggedIn } from \"../redux/actions/authActions\";\nimport Routes from \"../routes/Routes\";\nimport { Auth } from \"aws-amplify\";\nimport { BrowserRouter as Router, useHistory } from \"react-router-dom\";\nimport { onError } from \"../libs/errorLib\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport { listClients } from \"../api\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport styled, { ThemeProvider } from \"styled-components\";\n\nimport NavBar from \"../components/NavBar\";\nimport SideBar from \"../components/SideBar\";\n\nconst theme = {\n  colors: {\n    powderWhite: \"#FFFDF9\",\n    persianGreen: \"#06B49A\",\n    lightBlue: \"#AFDBD2\",\n    onyx: \"#36313D\",\n  },\n  fonts: [\"sans-serif\", \"Roboto\"],\n  fontSizes: {\n    small: \"1em\",\n    medium: \"2em\",\n    large: \"3em\",\n  },\n  spacing: {\n    small: \"8px\",\n    medium: \"16px\",\n    large: \"24px\",\n  },\n};\n\nconst drawerWidth = 240;\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n  },\n  grow: {\n    flexGrow: \"1\",\n  },\n  drawer: {\n    [theme.breakpoints.up(\"sm\")]: {\n      width: drawerWidth,\n      flexShrink: 0,\n    },\n  },\n  appBar: {\n    [theme.breakpoints.up(\"sm\")]: {\n      width: `calc(100% - ${drawerWidth}px)`,\n      marginLeft: drawerWidth,\n    },\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n    [theme.breakpoints.up(\"sm\")]: {\n      display: \"none\",\n    },\n  },\n  // necessary for content to be below app bar\n  toolbar: theme.mixins.toolbar,\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n  },\n}));\n\nfunction App(props) {\n  const { window } = props;\n  //const theme = useTheme();\n  const classes = useStyles();\n  const history = useHistory();\n  //const [isAuthenticating, setIsAuthenticating] = useState(true);\n  const [isAuthenticated, userHasAuthenticated] = useState(false);\n\n  const [mobileOpen, setMobileOpen] = React.useState(false);\n\n  useEffect(() => {\n    onLoad(props);\n  }, []);\n  async function onLoad(props) {\n    console.log(props);\n    try {\n      await Auth.currentSession();\n      props.loggedIn();\n      //userHasAuthenticated(true);\n    } catch (e) {\n      if (e !== \"No current user\") {\n        onError(e);\n      }\n    }\n    if (props.isAuthenticated) {\n      console.log(\"authenticated\");\n      try {\n        await listClients().then((res) => {\n          props.storeAllClients(res);\n        });\n      } catch (e) {\n        console.log(e);\n      }\n    }\n\n    //setIsAuthenticating(false);\n  }\n  /*\n  async function handleLogout() {\n    await Auth.signOut();\n    userHasAuthenticated(false);\n    history.push(\"/login\");\n  }\n  */\n  const handleDrawerToggle = () => {\n    setMobileOpen(!mobileOpen);\n  };\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <ThemeProvider theme={theme}>\n        <Router history={history}>\n          <NavBar mobileOpen={mobileOpen} setMobileOpen={setMobileOpen} />\n          <SideBar\n            isAuthenticated={isAuthenticated}\n            mobileOpen={mobileOpen}\n            setMobileOpen={setMobileOpen}\n          />\n          <>\n            <main className={classes.content}>\n              <div className={classes.toolbar} />\n              <Routes />\n            </main>\n          </>\n        </Router>\n      </ThemeProvider>\n    </div>\n  );\n}\nconst mapStateToProps = (state) => ({\n  clients: state.client.clients,\n  isAuthenticated: state.auth.isAuthenticated,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  storeAllClients: (payload) => dispatch(storeAllClients(payload)),\n  loggedIn: () => dispatch(loggedIn()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n"]},"metadata":{},"sourceType":"module"}