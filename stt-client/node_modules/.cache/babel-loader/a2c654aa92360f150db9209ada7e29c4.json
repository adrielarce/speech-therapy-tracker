{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/adrielarce/Documents/Projects/speech-therapy-tracker/stt-client/src/pages/programs/ViewProgram.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { connect } from \"react-redux\";\nimport { storeProgram, storeAllPrograms } from \"../../redux/actions/programsActions\";\nimport { onError } from \"../../libs/errorLib\";\nimport { listPrograms } from '../../api';\nimport { Link } from 'react-router-dom';\nimport ViewGoals from './ViewGoals';\n/*\nclass UpdateGoal extends Component {\n    updateUser = event => {\n        event.preventDefault()\n        window.location.href = `/program/update/${this.props.id}`\n    }\n    render() {\n        const updateLink = `/program/update/${this.props.id}`;\n        return (\n            <Link to={updateLink}>\n                Update\n            </Link>\n        )\n    }\n}\nclass DeleteGoal extends Component {\n    deleteUser = event => {\n        event.preventDefault()\n\n        if (\n            window.confirm(\n                `Do you want to delete the goal ${this.props.name} permanently?`,\n            )\n        ) {\n            api.deleteGoalById(this.props.id)\n            window.location.reload()\n        }\n    }\n\n    render() {\n        return <Delete onClick={this.deleteUser}>Delete</Delete>\n    }\n}\n*/\n\nfunction ViewProgram(props) {\n  _s();\n\n  const {\n    currentClient,\n    programs\n  } = props;\n  useEffect(() => {//loadPrograms();\n  }, []);\n  console.log(props);\n  /*\n  async function loadPrograms() {\n      if (currentClient) {\n          //check if programs data for this client in store already \n          //if (!programs) {\n              try {\n                  await listPrograms(currentClient).then((data) => {\n                      props.storeAllPrograms(data)\n                      props.storeProgram(data[0]);\n                  });\n              }\n              catch (e) {\n                  onError(e);\n              }\n          //}\n      }\n  }\n  */\n\n  /*componentDidMount = async () => {\n  \n  }*/\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: \"/program/create\",\n      children: \"Add Program\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ViewGoals, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ViewProgram, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = ViewProgram;\n\nconst mapStateToProps = state => ({\n  currentClient: state.client.currentClient,\n  programs: state.prog.programs\n});\n\nconst mapDispatchToProps = dispatch => ({\n  storeAllPrograms: payload => dispatch(storeAllPrograms(payload)),\n  storeProgram: payload => dispatch(storeProgram(payload))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ViewProgram);\n\nvar _c;\n\n$RefreshReg$(_c, \"ViewProgram\");","map":{"version":3,"sources":["/Users/adrielarce/Documents/Projects/speech-therapy-tracker/stt-client/src/pages/programs/ViewProgram.jsx"],"names":["React","useEffect","connect","storeProgram","storeAllPrograms","onError","listPrograms","Link","ViewGoals","ViewProgram","props","currentClient","programs","console","log","mapStateToProps","state","client","prog","mapDispatchToProps","dispatch","payload"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,YAAT,EAAuBC,gBAAvB,QAA+C,qCAA/C;AACA,SAASC,OAAT,QAAwB,qBAAxB;AACA,SAASC,YAAT,QAA6B,WAA7B;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AAAA;;AACxB,QAAM;AAAEC,IAAAA,aAAF;AAAiBC,IAAAA;AAAjB,MAA8BF,KAApC;AAEAT,EAAAA,SAAS,CAAC,MAAM,CACZ;AACH,GAFQ,EAEN,EAFM,CAAT;AAGAY,EAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAZ;AACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACI;AACJ;AACA;;AACI,sBACI,QAAC,KAAD,CAAO,QAAP;AAAA,4BACI,QAAC,IAAD;AAAM,MAAA,EAAE,EAAC,iBAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAII;AAAA;AAAA;AAAA;AAAA,YAJJ,eAKI,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,YALJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AASH;;GArCQD,W;;KAAAA,W;;AAuCT,MAAMM,eAAe,GAAIC,KAAD,KAAY;AAChCL,EAAAA,aAAa,EAAEK,KAAK,CAACC,MAAN,CAAaN,aADI;AAEhCC,EAAAA,QAAQ,EAAEI,KAAK,CAACE,IAAN,CAAWN;AAFW,CAAZ,CAAxB;;AAKA,MAAMO,kBAAkB,GAAIC,QAAD,KAAe;AACtChB,EAAAA,gBAAgB,EAAGiB,OAAD,IAAaD,QAAQ,CAAChB,gBAAgB,CAACiB,OAAD,CAAjB,CADD;AAEtClB,EAAAA,YAAY,EAAGkB,OAAD,IAAaD,QAAQ,CAACjB,YAAY,CAACkB,OAAD,CAAb;AAFG,CAAf,CAA3B;;AAKA,eAAenB,OAAO,CAACa,eAAD,EAAkBI,kBAAlB,CAAP,CAA6CV,WAA7C,CAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport { connect } from \"react-redux\";\nimport { storeProgram, storeAllPrograms } from \"../../redux/actions/programsActions\";\nimport { onError } from \"../../libs/errorLib\";\nimport { listPrograms } from '../../api';\nimport { Link } from 'react-router-dom';\nimport ViewGoals from './ViewGoals';\n\n\n/*\nclass UpdateGoal extends Component {\n    updateUser = event => {\n        event.preventDefault()\n        window.location.href = `/program/update/${this.props.id}`\n    }\n    render() {\n        const updateLink = `/program/update/${this.props.id}`;\n        return (\n            <Link to={updateLink}>\n                Update\n            </Link>\n        )\n    }\n}\nclass DeleteGoal extends Component {\n    deleteUser = event => {\n        event.preventDefault()\n\n        if (\n            window.confirm(\n                `Do you want to delete the goal ${this.props.name} permanently?`,\n            )\n        ) {\n            api.deleteGoalById(this.props.id)\n            window.location.reload()\n        }\n    }\n\n    render() {\n        return <Delete onClick={this.deleteUser}>Delete</Delete>\n    }\n}\n*/\nfunction ViewProgram(props) {\n    const { currentClient, programs } = props;\n\n    useEffect(() => {\n        //loadPrograms();\n    }, []);\n    console.log(props);\n    /*\n    async function loadPrograms() {\n        if (currentClient) {\n            //check if programs data for this client in store already \n            //if (!programs) {\n                try {\n                    await listPrograms(currentClient).then((data) => {\n                        props.storeAllPrograms(data)\n                        props.storeProgram(data[0]);\n                    });\n                }\n                catch (e) {\n                    onError(e);\n                }\n            //}\n        }\n    }\n    */\n    /*componentDidMount = async () => {\n    \n    }*/\n    return (\n        <React.Fragment>\n            <Link to=\"/program/create\">\n                Add Program\n            </Link>\n            <br />\n            <ViewGoals />\n        </React.Fragment>\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    currentClient: state.client.currentClient,\n    programs: state.prog.programs,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n    storeAllPrograms: (payload) => dispatch(storeAllPrograms(payload)),\n    storeProgram: (payload) => dispatch(storeProgram(payload)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ViewProgram);"]},"metadata":{},"sourceType":"module"}