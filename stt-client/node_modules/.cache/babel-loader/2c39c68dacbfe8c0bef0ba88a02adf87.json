{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/adrielarce/Documents/Projects/speech-therapy-tracker/stt-client/src/pages/programs/ViewGoals.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useContext } from 'react';\nimport { useAppContext } from \"../../libs/contextLib\";\nimport { onError } from \"../../libs/errorLib\";\nimport AddGoals from './AddGoals';\nimport { addGoal } from '../../api';\nimport { useFormFields } from \"../../libs/hooksLib\";\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Moment from 'react-moment';\n\nfunction ViewGoals(props) {\n  _s();\n\n  const [fields, handleFieldChange] = useFormFields({\n    target: \"\"\n  });\n  const program = props.program;\n  const goalBank = [{\n    id: \"artic-1\",\n    description: \"Given 20 sounds and a verbal prompt or model, STUDENT will articulate the sound(s) of / / at the isolation level with 80% accuracy in 4 out of 5 opportunities.\"\n  }];\n  useEffect(() => {\n    onLoad();\n  }, [program]);\n\n  async function onLoad() {}\n\n  async function insertGoal(id) {\n    //event.preventDefault();\n    //setIsLoading(true);\n    console.log(id);\n\n    try {\n      await addGoal(program, {\n        goal: {\n          id: id,\n          target: fields.target,\n          completed: false\n        },\n        programId: program.programId\n      }).then(data => {\n        console.log(data);\n      }); //clear form values after submit complete\n    } catch (e) {\n      console.log(e);\n    }\n  }\n  /*componentDidMount = async () => {\n   }*/\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      flexGrow: 1\n    },\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      style: {\n        padding: '1rem'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        children: [\"Start Date \", /*#__PURE__*/_jsxDEV(Moment, {\n          format: \"MMMM D, YYYY\",\n          children: \"program.startDate\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 34\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Container, {\n        children: [/*#__PURE__*/_jsxDEV(Accordion, {\n          children: [/*#__PURE__*/_jsxDEV(AccordionSummary, {\n            expandIcon: /*#__PURE__*/_jsxDEV(ExpandMoreIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 41\n            }, this),\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              children: \"Current Goal Summary\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(AccordionDetails, {\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              spacing: 1,\n              children: goalBank.map(goal => /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                children: /*#__PURE__*/_jsxDEV(Card, {\n                  style: {\n                    padding: 2,\n                    textAlign: 'center'\n                  },\n                  children: /*#__PURE__*/_jsxDEV(CardContent, {\n                    children: /*#__PURE__*/_jsxDEV(TableContainer, {\n                      children: /*#__PURE__*/_jsxDEV(Table, {\n                        children: [/*#__PURE__*/_jsxDEV(TableHead, {}, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 96,\n                          columnNumber: 57\n                        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n                          children: /*#__PURE__*/_jsxDEV(TableRow, {\n                            children: /*#__PURE__*/_jsxDEV(TableCell, {\n                              align: \"left\",\n                              children: goal.description\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 101,\n                              columnNumber: 65\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 100,\n                            columnNumber: 61\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 99,\n                          columnNumber: 57\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 95,\n                        columnNumber: 53\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 94,\n                      columnNumber: 49\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 93,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 92,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 37\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(AddGoals, {\n          program: program\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ViewGoals, \"sA7FllVquM/9WKy1vNcOjSwYJt4=\", false, function () {\n  return [useFormFields];\n});\n\n_c = ViewGoals;\nexport default ViewGoals;\n\nvar _c;\n\n$RefreshReg$(_c, \"ViewGoals\");","map":{"version":3,"sources":["/Users/adrielarce/Documents/Projects/speech-therapy-tracker/stt-client/src/pages/programs/ViewGoals.jsx"],"names":["React","useState","useEffect","useContext","useAppContext","onError","AddGoals","addGoal","useFormFields","Button","TextField","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","Container","Grid","Card","CardContent","Typography","Accordion","AccordionSummary","AccordionDetails","ExpandMoreIcon","Moment","ViewGoals","props","fields","handleFieldChange","target","program","goalBank","id","description","onLoad","insertGoal","console","log","goal","completed","programId","then","data","e","flexGrow","padding","map","textAlign"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext } from 'react'\nimport { useAppContext } from \"../../libs/contextLib\";\nimport { onError } from \"../../libs/errorLib\";\nimport AddGoals from './AddGoals';\nimport { addGoal } from '../../api';\nimport { useFormFields } from \"../../libs/hooksLib\";\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Moment from 'react-moment';\n\n\n\nfunction ViewGoals(props) {\n\n    const [fields, handleFieldChange] = useFormFields({\n        target: \"\",\n    });\n    const program = props.program;\n\n    const goalBank = [{\n        id: \"artic-1\",\n        description: \"Given 20 sounds and a verbal prompt or model, STUDENT will articulate the sound(s) of / / at the isolation level with 80% accuracy in 4 out of 5 opportunities.\",\n    }];\n\n    useEffect(() => {\n        onLoad();\n    }, [program]);\n\n    async function onLoad() {\n\n    }\n    async function insertGoal(id) {\n        //event.preventDefault();\n        //setIsLoading(true);\n        console.log(id);\n        try {\n            await addGoal(program, {\n                goal: {\n                    id: id,\n                    target: fields.target,\n                    completed: false,\n                },\n                programId: program.programId,\n            }).then((data) => {\n                console.log(data);\n            });\n            //clear form values after submit complete\n\n        } catch (e) {\n            console.log(e);\n        }\n    }\n\n\n\n    /*componentDidMount = async () => {\n\n    }*/\n    return (\n        <div style={{ flexGrow: 1 }}>\n            <Paper style={{ padding: '1rem' }}>\n                <Typography variant=\"h5\">\n                    Start Date {(<Moment format=\"MMMM D, YYYY\">program.startDate</Moment>)}\n                </Typography>\n                <Container>\n                    <Accordion>\n                        <AccordionSummary\n                            expandIcon={<ExpandMoreIcon />}\n                        >\n                            <Typography variant=\"h6\">Current Goal Summary</Typography>\n                        </AccordionSummary>\n                        <AccordionDetails>\n                            <Grid container spacing={1}>\n                                {goalBank.map((goal) => (\n                                    <Grid item >\n                                        <Card style={{ padding: 2, textAlign: 'center' }}>\n                                            <CardContent>\n                                                <TableContainer>\n                                                    <Table>\n                                                        <TableHead>\n\n                                                        </TableHead>\n                                                        <TableBody>\n                                                            <TableRow>\n                                                                <TableCell align=\"left\">{goal.description}</TableCell>\n                                                            </TableRow>\n                                                        </TableBody>\n                                                    </Table>\n                                                </TableContainer>\n                                            </CardContent>\n                                        </Card>\n                                    </Grid>\n                                ))}\n                            </Grid>\n                        </AccordionDetails>\n                    </Accordion>\n                    <AddGoals program={program} />\n                </Container>\n            </Paper>\n        </div>\n    )\n}\n\nexport default ViewGoals"]},"metadata":{},"sourceType":"module"}