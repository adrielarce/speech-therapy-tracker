{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/adrielarce/Documents/Projects/speech-therapy-tracker/stt-client/src/components/cognito-auth/Login.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { loggedIn } from \"../../redux/actions/authActions\";\nimport { Auth } from \"aws-amplify\";\nimport Form from \"react-bootstrap/Form\";\nimport LoaderButton from \"../LoaderButton\";\nimport { useAppContext } from \"../../libs/contextLib\";\nimport { useFormFields } from \"../../libs/hooksLib\";\nimport { onError } from \"../../libs/errorLib\";\nimport \"./Login.css\";\n\nfunction Login(props) {\n  _s();\n\n  const {\n    userHasAuthenticated\n  } = useAppContext();\n  const [isLoading, setIsLoading] = useState(false);\n  const [fields, handleFieldChange] = useFormFields({\n    email: \"\",\n    password: \"\"\n  });\n\n  function validateForm() {\n    return fields.email.length > 0 && fields.password.length > 0;\n  }\n\n  async function handleSubmit(event) {\n    event.preventDefault();\n    setIsLoading(true);\n\n    try {\n      await Auth.signIn(fields.email, fields.password); //userHasAuthenticated(true);\n\n      props.loggedIn();\n    } catch (e) {\n      onError(e);\n      setIsLoading(false);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Login\",\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        size: \"lg\",\n        controlId: \"email\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          autoFocus: true,\n          type: \"email\",\n          value: fields.email,\n          onChange: handleFieldChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        size: \"lg\",\n        controlId: \"password\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"password\",\n          value: fields.password,\n          onChange: handleFieldChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(LoaderButton, {\n        block: true,\n        size: \"lg\",\n        type: \"submit\",\n        isLoading: isLoading,\n        disabled: !validateForm(),\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Login, \"6THsrVkC5A13OIB9z9SkMRybZI8=\", false, function () {\n  return [useAppContext, useFormFields];\n});\n\n_c = Login;\n\nconst mapDispatchToProps = dispatch => ({\n  loggedIn: () => dispatch(loggedIn())\n});\n\nexport default connect(null, mapDispatchToProps)(Login);\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/adrielarce/Documents/Projects/speech-therapy-tracker/stt-client/src/components/cognito-auth/Login.jsx"],"names":["React","useState","connect","loggedIn","Auth","Form","LoaderButton","useAppContext","useFormFields","onError","Login","props","userHasAuthenticated","isLoading","setIsLoading","fields","handleFieldChange","email","password","validateForm","length","handleSubmit","event","preventDefault","signIn","e","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { loggedIn } from \"../../redux/actions/authActions\";\r\nimport { Auth } from \"aws-amplify\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport LoaderButton from \"../LoaderButton\";\r\nimport { useAppContext } from \"../../libs/contextLib\";\r\nimport { useFormFields } from \"../../libs/hooksLib\";\r\nimport { onError } from \"../../libs/errorLib\";\r\nimport \"./Login.css\";\r\n\r\nfunction Login(props) {\r\n    const { userHasAuthenticated } = useAppContext();\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [fields, handleFieldChange] = useFormFields({\r\n        email: \"\",\r\n        password: \"\"\r\n    });\r\n    function validateForm() {\r\n        return fields.email.length > 0 && fields.password.length > 0;\r\n    }\r\n    async function handleSubmit(event) {\r\n        event.preventDefault();\r\n        setIsLoading(true);\r\n        try {\r\n            await Auth.signIn(fields.email, fields.password);\r\n            //userHasAuthenticated(true);\r\n            props.loggedIn();\r\n        } catch (e) {\r\n            onError(e);\r\n            setIsLoading(false);\r\n        }\r\n    }\r\n    return (\r\n        <div className=\"Login\">\r\n            <Form onSubmit={handleSubmit}>\r\n                <Form.Group size=\"lg\" controlId=\"email\">\r\n                    <Form.Label>Email</Form.Label>\r\n                    <Form.Control\r\n                        autoFocus\r\n                        type=\"email\"\r\n                        value={fields.email}\r\n                        onChange={handleFieldChange}\r\n                    />\r\n                </Form.Group>\r\n                <Form.Group size=\"lg\" controlId=\"password\">\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control\r\n                        type=\"password\"\r\n                        value={fields.password}\r\n                        onChange={handleFieldChange}\r\n                    />\r\n                </Form.Group>\r\n                <LoaderButton\r\n                    block\r\n                    size=\"lg\"\r\n                    type=\"submit\"\r\n                    isLoading={isLoading}\r\n                    disabled={!validateForm()}\r\n                >\r\n                    Login\r\n                </LoaderButton>\r\n            </Form>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    loggedIn: () => dispatch(loggedIn()),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(Login);"]},"metadata":{},"sourceType":"module"}